{
    "swagger": "2.0",
    "info": {
        "description": "APIs exposed by optical-mediator service",
        "version": "3.0.33-SNAPSHOT",
        "title": "optical-mediator service APIs",
        "termsOfService": "http://www.cisco.com/web/siteassets/legal/terms_condition.html",
        "contact": {
            "name": "Cisco Crosswork Team",
            "url": "https://www.cisco.com",
            "email": "support@cisco.com"
        },
        "license": {
            "name": "Cisco Software License Agreement",
            "url": "http://www.cisco.com/public/sw-license-agreement.html"
        }
    },
    "host": "optical-mediator:8080",
    "tags": [
        {
            "name": "api-controller",
            "description": "API Controller"
        },
        {
            "name": "log-controller",
            "description": "Log Controller"
        },
        {
            "name": "mediator-controller",
            "description": "Mediator Controller"
        }
    ],
    "paths": {
        "/api/log/changeLogLevel": {
            "get": {
                "tags": [
                    "log-controller"
                ],
                "summary": "changeLogLevel",
                "operationId": "changeLogLevelUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "level",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/serviceStatus": {
            "get": {
                "tags": [
                    "api-controller"
                ],
                "summary": "Retrieves the service status. Use for development and debugging purposes only.",
                "description": "Retrieves the status of the service, which is active/standby (leader/follower).",
                "operationId": "serviceStatusUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "extended",
                        "in": "query",
                        "description": "Use for development purposes only. The value is true or false. The default value is false. When true, it adds extended status ",
                        "required": false,
                        "type": "string",
                        "x-example": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mediator/fullResync": {
            "get": {
                "tags": [
                    "mediator-controller"
                ],
                "summary": "fullResync",
                "operationId": "fullResyncUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mediator/objectResync": {
            "get": {
                "tags": [
                    "mediator-controller"
                ],
                "summary": "objectResync",
                "operationId": "objectResyncUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "uuid",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mediator/typedResync": {
            "get": {
                "tags": [
                    "mediator-controller"
                ],
                "summary": "typedResync",
                "operationId": "typedResyncUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "subtype",
                        "in": "query",
                        "description": "valid in case of NEP type ",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "MC",
                            "NO_SUB_TYPE",
                            "OMS",
                            "OTS",
                            "OTSIMC"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "entity type requested to be resync ",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Connection",
                            "ConnectionService",
                            "Device",
                            "LINK",
                            "NEP",
                            "SIP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    }
}

{
	"swagger": "2.0",
	"info": {
		"description": "APIs exposed by nso-connector service",
		"version": "3.0.5",
		"title": "nso-connector service APIs",
		"termsOfService": "http://www.cisco.com/web/siteassets/legal/terms_condition.html",
		"contact": {
			"name": "Cisco Crosswork Team",
			"url": "https://www.cisco.com",
			"email": "support@cisco.com"
		},
		"license": {
			"name": "Cisco Software License Agreement",
			"url": "http://www.cisco.com/public/sw-license-agreement.html"
		}
	},
	"host": "localhost:8080",
	"tags": [
		{
			"name": "api-controller",
			"description": "API Controller"
		},
		{
			"name": "log-controller",
			"description": "Log Controller"
		}
	],
	"paths": {
		"/api/fullResync": {
			"post": {
				"tags": [
					"api-controller"
				],
				"summary": "Performs a full resync for all service types.",
				"description": "This is heavy operation, use with caution.",
				"operationId": "fullResyncUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "force",
						"in": "query",
						"description": "Deprecated. Not used.",
						"required": false,
						"type": "string",
						"x-example": "false"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/log/changeLogLevel": {
			"get": {
				"tags": [
					"log-controller"
				],
				"summary": "changeLogLevel",
				"operationId": "changeLogLevelUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "level",
						"in": "query",
						"description": "level",
						"required": true,
						"type": "string"
					},
					{
						"name": "loggerName",
						"in": "query",
						"description": "loggerName",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/serviceResync": {
			"post": {
				"tags": [
					"api-controller"
				],
				"summary": "Resyncs service by service type and service key.",
				"description": "Resyncs the service and  service-plan of this service.",
				"operationId": "serviceResyncUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "serviceName",
						"in": "query",
						"description": "The encoded key of the service, as defined as service key.",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "syncRequestData",
						"description": "Optional - alternative to service parameter - sync request data. This is for single or multi key service types. Key-value map is needed for each service or resource ID field, key is the ID field, value is the value for this service.",
						"required": false,
						"schema": {
							"$ref": "#/definitions/SyncRequestData"
						}
					},
					{
						"name": "typePath",
						"in": "query",
						"description": "This parameter is lenient. For the path value, can refer to serviceStatus with extended=true parameter: model_entities entry. We recommend that you use the full path as shown in the following example.",
						"required": true,
						"type": "string",
						"x-example": "ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/serviceStatus": {
			"get": {
				"tags": [
					"api-controller"
				],
				"summary": "Retrieves the service status. Use for development and debugging purposes only.",
				"description": "Retrieves the status of the service, which is active/standby (leader/follower).",
				"operationId": "serviceStatusUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "extended",
						"in": "query",
						"description": "Use for development purposes only. The value is true or false. The default value is false. When true, it adds extended status, including NSO provider related status. ",
						"required": false,
						"type": "string",
						"x-example": "true"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/typeResync": {
			"post": {
				"tags": [
					"api-controller"
				],
				"summary": "Resyncs  by service type.",
				"description": "Resyncs the service, service-plan, and resources of this service type.",
				"operationId": "typeResyncUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "force",
						"in": "query",
						"description": "Deprecated. Not used.",
						"required": false,
						"type": "string",
						"x-example": "false"
					},
					{
						"name": "typePath",
						"in": "query",
						"description": "This parameter is lenient. For the path value, can refer to serviceStatus with extended=true parameter: model_entities entry. We recommend that you use the full path as shown in the following example:",
						"required": true,
						"type": "string",
						"x-example": "ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		}
	},
	"definitions": {
		"SyncRequestData": {
			"type": "object",
			"properties": {
				"keyFieldsKVs": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			},
			"title": "SyncRequestData"
		}
	}
}

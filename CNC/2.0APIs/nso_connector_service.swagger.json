{
  "swagger": "2.0",
  "info": {
    "description": "APIs that allow you to control synchronization between Cisco Crosswork and Cisco Network Services Orchestrator (NSO).",
    "version": "1",
    "title": "Cisco NSO Collector Service API",
    "termsOfService": "http://www.cisco.com/web/siteassets/legal/terms_condition.html",
    "contact": {
      "url": "https://www.cisco.com",
      "email": "developer@cisco.com"
    },
    "license": {
      "name": "Cisco DevNet",
      "url": "https://www.cisco.com"
    }
  },
  "host": "localhost:8080",
  "tags": [{
      "name": "api-controller",
      "description": "API Controller"
    },
    {
      "name": "log-controller",
      "description": "Log Controller"
    }
  ],
  "paths": {
    "/api/fullResync": {
      "post": {
        "tags": [
          "api-controller"
        ],
        "summary": "Full resync for all service types.",
        "description": "This is heavy operation, use with caution. Allowed if the user is from admin role.",
        "operationId": "fullResyncUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "force",
          "in": "query",
          "description": "true or false. Default true.",
          "required": false,
          "type": "string",
          "x-example": "false"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/log/changeLogLevel": {
      "get": {
        "tags": [
          "log-controller"
        ],
        "summary": "changeLogLevel",
        "operationId": "changeLogLevelUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "level",
          "in": "query",
          "description": "level",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/serviceResync": {
      "post": {
        "tags": [
          "api-controller"
        ],
        "summary": "Resync service by service type and name.",
        "description": "It will resync the service and service-plan of this service. ",
        "operationId": "serviceResyncUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "serviceName",
            "in": "query",
            "description": "serviceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "typePath",
            "in": "query",
            "description": "Service type parameter is lenient. Using full path like following example is highly recommended.",
            "required": true,
            "type": "string",
            "x-example": "ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/serviceStatus": {
      "get": {
        "tags": [
          "api-controller"
        ],
        "summary": "Get service status, mainly for dev and debug purposes.",
        "description": "Get instances active/standby (leader/follower) statuses. Allowed if the user is from admin role.",
        "operationId": "serviceStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "extended",
          "in": "query",
          "description": "This value is used for dev purposes only. Value is true or false. Default false. When true, it adds extended status, including NSO provider related status. The data should be available only for the instance which handles the NSO provider, the active/leader.",
          "required": false,
          "type": "string",
          "x-example": "true"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/typeResync": {
      "post": {
        "tags": [
          "api-controller"
        ],
        "summary": "Resync by service type.",
        "description": "It will resync the services, service-plan, and resources of this type. Allowed if the user is from admin role.",
        "operationId": "typeResyncUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "force",
            "in": "query",
            "description": "force",
            "required": false,
            "type": "string"
          },
          {
            "name": "typePath",
            "in": "query",
            "description": "Service type parameter is lenient. Using full path like following example is highly recommended.",
            "required": true,
            "type": "string",
            "x-example": "ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}
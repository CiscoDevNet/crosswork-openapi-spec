{
  "swagger": "2.0",
  "info": {
    "title": "Crosswork ZTP Image Service APIs",
    "version": "2.0.0",
    "contact": {
      "name": "Crosswork Team, Cisco",
      "email": "support@cisco.com"
    },
    "license": {
      "name": "Cisco Software License Agreement",
      "url": "http://www.cisco.com/public/sw-license-agreement.html"
    },
    "description": "This document details the Crosswork REST APIs that you can use to manage software image files for Zero Touch Provisioning (ZTP) devices."
  },
  "basePath": "/crosswork/imagesvc/",
  "tags": [{
    "name": "image-platform-controller",
    "description": "Image Platform Controller"
  },
    {
      "name": "file-controller",
      "description": "File Controller"
    },
    {
      "name": "image-controller",
      "description": "Image Controller"
    },
    {
      "name": "health-controller",
      "description": "Health Controller"
    }
  ],
  "paths": {
    "/v1/device/files/{id}": {
      "get": {
        "tags": [
          "file-controller"
        ],
        "summary": "Download image file by ID from device.",
        "operationId": "downloadImageFromDeviceByImageIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-cisco-serial*",
            "in": "header",
            "description": "X-cisco-serial*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/device/image/download/{token}/{name}": {
      "get": {
        "tags": [
          "file-controller"
        ],
        "summary": "Download image file by a token(random ID) from device.",
        "operationId": "downloadImageFromDeviceByRandomIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/files/{id}": {
      "get": {
        "tags": [
          "file-controller"
        ],
        "summary": "Download image file by ID.",
        "operationId": "downloadImageByImageIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body."
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/health": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "summary": "/v1/health",
        "operationId": "healthcheckUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/images": {
      "get": {
        "tags": [
          "image-controller"
        ],
        "summary": "Get images",
        "operationId": "getAllImagesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "descending",
            "in": "query",
            "description": "descending",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "imageId",
            "in": "query",
            "description": "imageId",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageType",
            "in":"query",
            "description": "imageType",
            "required":false,
            "type":"string"
          },
          {
            "name": "imagePlatform",
            "in": "query",
            "description": "imagePlatform",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageVersion",
            "in": "query",
            "description": "imageVersion",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageTitle",
            "in": "query",
            "description": "imageTitle",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceFamily",
            "in": "query",
            "description": "deviceFamily",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "searchType",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-Real-IP",
            "in": "header",
            "description": "X-Real-IP",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageFileName",
            "in": "query",
            "description": "imageFileName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ResponseDtoOfImageDto"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      },
      "delete": {
        "tags": [
          "image-controller"
        ],
        "summary": "Delete images by a list of IDs.",
        "operationId": "deleteImagesByIdListUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "idList",
            "description": "idList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content. The request was successful and there is no additional content in the response body."
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          }
        }
      }
    },
    "/v1/images/count": {
      "get": {
        "tags": [
          "image-controller"
        ],
        "summary": "Get total count of images",
        "operationId": "getImageCountUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/images/{imageId}": {
      "get": {
        "tags": [
          "image-controller"
        ],
        "summary": "Get image by ID.",
        "operationId": "getImageByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Real-IP",
            "in": "header",
            "description": "X-Real-IP",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ImageDto"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      },
      "put": {
        "tags": [
          "image-controller"
        ],
        "summary": "Update the image metadata.",
        "operationId": "updateImageInfoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "imageDto",
            "description": "imageDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ImageDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      },
      "delete": {
        "tags": [
          "image-controller"
        ],
        "summary": "Delete image by ID.",
        "operationId": "deleteImageByIdUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "imageId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content. The request was successful and there is no additional content in the response body."
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          }
        }
      }
    },
    "/v1/platforms": {
      "get": {
        "tags": [
          "image-platform-controller"
        ],
        "summary": "Retrieves all supported platforms",
        "operationId": "getPlatformsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fetchCustomData",
            "in": "query",
            "description": "fetchCustomData",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/platforms/{platform}/families": {
      "get": {
        "tags": [
          "image-platform-controller"
        ],
        "summary": "Retrieves all supported families, for a specific platform",
        "operationId": "getFamiliesByPlatformUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "fetchCustomData",
            "in": "query",
            "description": "Retrieve all custom configured device families based on device OS platform",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
        }
      }
    },
    "/v1/platforms/{platform}/versions": {
      "get": {
        "tags": [
          "image-platform-controller"
        ],
        "summary": "Retrieves all supported versions, for a specific platform",
        "operationId": "getVersionsByPlatformUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "path",
            "description": "platform",
            "required": true,
            "type": "string"
          },
          {
            "name": "fetchCustomData",
            "in": "query",
            "description": "Retrieves all custom configured image software versions based on OS platform",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "secured",
            "in": "query",
            "description": "secured",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful. The result is contained in the response body.",
            "schema": {
              "$ref": "#/definitions/ResponseDto"
            }
          },
          "401": {
            "description": "Unauthorized. The request has not been applied because it lacks valid authentication credentials for the target resource."
          },
          "403": {
            "description": "Forbidden. The server recognizes the authentication credentials, but the client is not authorized to perform this request."
          },
          "404": {
            "description": "Not Found. The client made a request for a resource that does not exist."
          }
          }
        }
      }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [{
    "bearerAuth": []
  }],
  "definitions": {
    "ImageDto": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "deviceFamily": {
          "type": "string"
        },
        "downloadURL": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageFileName": {
          "type": "string"
        },
        "imagePlatform": {
          "type": "string"
        },
        "imageSource": {
          "type": "string"
        },
        "imageTitle": {
          "type": "string"
        },
        "imageType": {
          "type": "string"
        },
        "imageVersion": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        }
      },
      "title": "ImageDto"
    },
    "ResponseDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseDto"
    },
    "ResponseDtoOfImageDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDto"
          }
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseDtoOfImageDto"
    },
    "Status": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "Status"
      }
    }
  }

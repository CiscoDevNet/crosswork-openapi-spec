{
  "swagger": "2.0",
  "info": {
    "title": "proto/capp.proto",
    "description": "AppManager providers API methods for managing Application that run on top of Kubernetes within Crosswork. This includes\ninstall-activate,deactivate,update,uninstall for Crosswork Applications. In addition it also has API's to manager internal\npackage repository from which the install is carried out.",
    "version": "v2"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/crosswork/platform/v2/capp/application/activate": {
      "post": {
        "summary": "Activate Applications takes in Installed Application id, which is the key to activate application.\nAll pods within an application are deployed in this phase. The response returns a job id,job status along with\na application id which can be used to track application  status .",
        "operationId": "ActivateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerActivateApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerActivateApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/application/deactivate": {
      "post": {
        "summary": "Deactivates an application , by taking in application id. Deactivate retains persisted data of application, only undeploys the\nresources in Crosswork pertaining to the Application.",
        "operationId": "DeactivateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerDeactivateApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerDeactivateApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/application/installactivate": {
      "post": {
        "summary": "Install and activate Application takes in cab file,to be untarred and validated into CW system to\nmake it ready of activation. Install can include signature checks,checksum,image checks,and more.This\ninstall the from apps from repository into installed directory. Activation is carried out as part of install,\nwhich includes pod deployment.\nThe response returns a job id,job status along with\na application id which can be used to track application  status .",
        "operationId": "InstallAndActivateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerInstallAndActivateApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerInstallAndActivateApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/application/uninstall": {
      "post": {
        "summary": "Uninstall Application takes in application id,to be removed from the system. Application need to\nbe active for uninstall to work.\nThe response returns a job id,job status along with\na application id which can be used to track application  status .",
        "operationId": "UninstallApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerUninstallApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerUninstallApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/applicationdata/query": {
      "post": {
        "summary": "Returns Application meta-data and platform-data as part of application data, when optional application id is passed.",
        "operationId": "GetApplicationData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationDataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationDataRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/applicationstatus/query": {
      "post": {
        "summary": "Returns current state of Application, when a optional application id, allowing user to infer activation or\ndeactivation progress",
        "operationId": "GetApplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationStatusResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationStatusRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/applicationsummary/query": {
      "post": {
        "summary": "Returns Data and status of an application. This would contain all metadata and summary",
        "operationId": "GetApplicationSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationSummaryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetApplicationSummaryRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/events/query": {
      "post": {
        "summary": "GetEvents related to objects",
        "operationId": "GetAppManagerEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetAppManagerEventsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetAppManagerEventsRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/installedapplicationid/query": {
      "post": {
        "summary": "Service method to get list of installed application ids",
        "operationId": "GetInstalledApplicationIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetInstalledApplicationIdResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetInstalledApplicationIdRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/jobs/query": {
      "post": {
        "summary": "Gets a list of jobs that have been submitted for applications/bundle",
        "operationId": "GetAppManagerJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetAppManagerJobsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetAppManagerJobsRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/repository/packagedata": {
      "post": {
        "summary": "Add Packages from external repo_utils file path into App repository",
        "operationId": "AddToRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerAddToRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerAddToRepositoryRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/repository/packagedata/query": {
      "post": {
        "summary": "Returns the list of  versions within each app available in CW repository",
        "operationId": "GetPackageVersionsInRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetPackageVersionsInRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetPackageVersionsInRepositoryRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/repository/packagenameidgroups/query": {
      "post": {
        "summary": "Returns the list of apps available in CW repository",
        "operationId": "GetPackagesInRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerGetPackagesInRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/app_managerGetPackagesInRepositoryRequest"
            }
          }
        ],
        "tags": [
          "ApplicationManagerService"
        ]
      }
    },
    "/crosswork/platform/v2/capp/repository/packagedata/all": {
      "delete": {
        "summary": "Remove all Applications from Software Repository.",
        "operationId": "RemoveAllPackagesRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/app_managerRemoveAllPackagesRepositoryResponse"
            }
          }
        },
        "tags": [
          "ApplicationManagerService"
        ]
      }
    }
  },
  "definitions": {
    "app_managerActivateApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Application to activate"
        }
      },
      "title": "Activate a Application Request"
    },
    "app_managerActivateApplicationResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted to deleted"
        }
      },
      "title": "Activate a Application Response"
    },
    "app_managerAddToRepositoryRequest": {
      "type": "object",
      "properties": {
        "remote_file": {
          "type": "string",
          "title": "file to download"
        },
        "ssh_config": {
          "$ref": "#/definitions/common_platformSshConfig",
          "title": "SSH config for remote Host from which to copy the files from"
        }
      },
      "title": "Add tar request to copy the bundle from remote host in CW and add it to internal repository"
    },
    "app_managerAddToRepositoryResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted or Rejected"
        }
      },
      "title": "Add packages into CW repository"
    },
    "app_managerAppManagerEvent": {
      "type": "object",
      "properties": {
        "event_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerEventTag"
          },
          "title": "EventTags"
        },
        "message": {
          "type": "string",
          "title": "Event message"
        },
        "event_time": {
          "type": "string",
          "format": "int64",
          "title": "TimeStamp"
        }
      },
      "title": "AppManagerEvents consitutes messages transmitted during setup and removal,along with a timestamp"
    },
    "app_managerAppManagerJob": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/common_platformJob",
          "title": "Common Job"
        }
      },
      "title": "Job abstraction details"
    },
    "app_managerApplicationAction": {
      "type": "string",
      "enum": [
        "UNKNOWN_ACTION",
        "INSTALL",
        "ACTIVATE",
        "DEACTIVATE",
        "UPDATE",
        "UNINSTALL",
        "VIEW_APPLICATION_DETAILS"
      ],
      "default": "UNKNOWN_ACTION",
      "title": "Actions that can be performed on application"
    },
    "app_managerApplicationData": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Immutable Unique application identifier"
        },
        "version": {
          "type": "string",
          "title": "Semantic version of Application containing Major.minor.patch"
        },
        "summary": {
          "$ref": "#/definitions/app_managerSummary",
          "title": "Summary of application"
        },
        "identifier_type": {
          "$ref": "#/definitions/app_managerIdentifierType",
          "title": "Identifier Type of APPLICATION,POD,RESOURCE"
        },
        "category": {
          "$ref": "#/definitions/app_managerCategory",
          "title": "Category to indicate whether this is a external app or internal app  or infra application"
        },
        "build_information": {
          "$ref": "#/definitions/app_managerBuildInformation",
          "title": "Build information"
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerDeploymentUnit"
          },
          "title": "List of constituent contents that make up the app"
        },
        "dependency_constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerConstraint"
          },
          "title": "List of Dependencies"
        },
        "license_data": {
          "$ref": "#/definitions/app_managerSmartLicensingData",
          "title": "Smart licensing Info"
        },
        "meta_schema_version": {
          "type": "string",
          "title": "Schema Spec version"
        }
      },
      "title": "Application Data"
    },
    "app_managerApplicationState": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Immutable application id"
        },
        "version": {
          "type": "string",
          "title": "Semantic version of Application containing Major.minor.patch, will be populated if application is active"
        },
        "install_id": {
          "type": "string",
          "title": "unique install id per application"
        },
        "status": {
          "$ref": "#/definitions/app_managerStatus",
          "title": "Status such as installed,available,active,inactive,terminated"
        },
        "progress": {
          "type": "number",
          "format": "float",
          "title": "Progress of transient state, if any"
        },
        "possible_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerApplicationAction"
          },
          "title": "Application actions that can be performed given the current state"
        },
        "available_updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerPackageIdentifier"
          },
          "title": "list of available updates"
        },
        "pending_action": {
          "$ref": "#/definitions/app_managerPendingApplicationAction",
          "title": "Pending Application action if any"
        },
        "last_operation_error": {
          "$ref": "#/definitions/common_platformError",
          "title": "Last error that's associated with object during the last operation. It will be reset during the next operation"
        }
      },
      "title": "Notification object\nContext id : robot.orchestrator.capp.applicationstate.json\nApplication current state along with this events"
    },
    "app_managerApplicationSummary": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Application id"
        },
        "application_data": {
          "$ref": "#/definitions/app_managerApplicationData",
          "title": "Application data"
        },
        "application_state": {
          "$ref": "#/definitions/app_managerApplicationState",
          "title": "Application state"
        }
      },
      "title": "Application summary consolidates app data and state into one message"
    },
    "app_managerBuildInformation": {
      "type": "object",
      "properties": {
        "date_time": {
          "type": "string",
          "title": "Date on which image was built in RFC339 format"
        },
        "publisher": {
          "type": "string",
          "title": "Publisher information"
        }
      },
      "title": "Build Information"
    },
    "app_managerCategory": {
      "type": "string",
      "enum": [
        "UNKNOWN_CATEGORY",
        "EXTERNAL_APP",
        "PLATFORM"
      ],
      "default": "UNKNOWN_CATEGORY",
      "description": "- EXTERNAL_APP: INTERNAL_APP = 1; reserved\n - PLATFORM: INFRA",
      "title": "App Object Category to indicate whether it app is external app or an internal app or platform"
    },
    "app_managerConstraint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "identifier object ,cannot contain only alphabets _"
        },
        "identifier_type": {
          "$ref": "#/definitions/app_managerIdentifierType",
          "title": "identifier Type"
        },
        "version_range": {
          "type": "string",
          "title": "examples of valid range - \"\u003c1.0.0\",\"\u003c=1.0.0\",\"\u003e1.0.0\",\"\u003e=1.0.0\",\"1.0.0\", \"=1.0.0\",\"\u003e=1.0.0 \u003c=2.0.0\" or \"*\" indicating all versions is exceptable"
        }
      },
      "description": "constraint stanza defines rules for how a direct dependency must be incorporated into the dependency graph."
    },
    "app_managerDeactivateApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Application id"
        },
        "force": {
          "type": "boolean",
          "format": "boolean",
          "title": "Setting force to true would deactivate application irrespective of application state"
        }
      },
      "title": "Deactivate a Application request"
    },
    "app_managerDeactivateApplicationResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted to deleted"
        }
      },
      "title": "Deactivate a Application response"
    },
    "app_managerDeploymentUnit": {
      "type": "object",
      "properties": {
        "unit_id": {
          "type": "string",
          "title": "Immutable Unique application identifier"
        },
        "version": {
          "type": "string",
          "title": "Semantic version of Application containing Major.minor.patch"
        },
        "description": {
          "type": "string",
          "title": "Description of pod,resource"
        },
        "summary": {
          "$ref": "#/definitions/app_managerSummary",
          "title": "Unit Name"
        },
        "identifier_Type": {
          "$ref": "#/definitions/app_managerIdentifierType",
          "title": "Identifier Type of POD,RESOURCE"
        },
        "category": {
          "$ref": "#/definitions/app_managerCategory",
          "title": "Category to indicate whether this is a external or internal or infra application"
        },
        "dependency_constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerConstraint"
          },
          "title": "List of Dependencies"
        },
        "build_information": {
          "$ref": "#/definitions/app_managerBuildInformation",
          "title": "Build information"
        },
        "meta_schema_version": {
          "type": "string",
          "title": "Schema Spec version"
        }
      },
      "title": "Kubernetes deployment units"
    },
    "app_managerEventTag": {
      "type": "object",
      "properties": {
        "tag_type": {
          "$ref": "#/definitions/app_managerEventTagType",
          "title": "Tag type"
        },
        "tag_value": {
          "type": "string",
          "title": "Value of Tag"
        }
      },
      "title": "Event tags"
    },
    "app_managerEventTagType": {
      "type": "string",
      "enum": [
        "UNKNOWN_EVENT_TAG_TYPE",
        "APPLICATION_ID_EVENT",
        "FILE_ID_EVENT",
        "JOB_ID_EVENT",
        "DEPLOYMENT_ID_EVENT"
      ],
      "default": "UNKNOWN_EVENT_TAG_TYPE",
      "description": "- APPLICATION_ID_EVENT: Application Events\n - FILE_ID_EVENT: Package file events\n - JOB_ID_EVENT: Job Event\n - DEPLOYMENT_ID_EVENT: Pod event",
      "title": "Event tags"
    },
    "app_managerGetAppManagerEventsRequest": {
      "type": "object",
      "properties": {
        "event_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerEventTag"
          }
        },
        "message": {
          "type": "string",
          "title": "Optional message filter"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get list of events sorted by desc time based on event tag"
    },
    "app_managerGetAppManagerEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerAppManagerEvent"
          },
          "title": "List of tar files"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Return list of Tar's available in stagingfs for activation"
    },
    "app_managerGetAppManagerJobsRequest": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get list of Tar's available in stagingfs for activation"
    },
    "app_managerGetAppManagerJobsResponse": {
      "type": "object",
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerAppManagerJob"
          },
          "title": "List of tar files"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted or Rejected"
        }
      },
      "title": "Return list of Tar's available in stagingfs for activation"
    },
    "app_managerGetApplicationDataRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Individual application id request"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get list of Applications Currently Available Request"
    },
    "app_managerGetApplicationDataResponse": {
      "type": "object",
      "properties": {
        "application_data_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerApplicationData"
          },
          "title": "List of applications as response"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get list of Application configs Available"
    },
    "app_managerGetApplicationStatusRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Individual application id request"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get list of Applications Currently Available Request"
    },
    "app_managerGetApplicationStatusResponse": {
      "type": "object",
      "properties": {
        "application_states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerApplicationState"
          },
          "title": "List of applications as response"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get list of Applications Available"
    },
    "app_managerGetApplicationSummaryRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Individual application id request"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get list of Applications Currently Available Request"
    },
    "app_managerGetApplicationSummaryResponse": {
      "type": "object",
      "properties": {
        "application_summary_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerApplicationSummary"
          },
          "title": "List of applications as response"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get list of Application Summary Available"
    },
    "app_managerGetInstalledApplicationIdRequest": {
      "type": "object",
      "properties": {
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get installed Application id request"
    },
    "app_managerGetInstalledApplicationIdResponse": {
      "type": "object",
      "properties": {
        "installed_application_ids": {
          "$ref": "#/definitions/app_managerInstalledApplicationId",
          "title": "List of installed app ids"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted or Rejected"
        }
      },
      "title": "Return list of installed Applications"
    },
    "app_managerGetPackageVersionsInRepositoryRequest": {
      "type": "object",
      "properties": {
        "package_identifier": {
          "$ref": "#/definitions/app_managerPackageIdentifier",
          "title": "Repo app identifier"
        },
        "is_not_install_only": {
          "type": "boolean",
          "format": "boolean",
          "description": "Return only those packages which are not installed or installing."
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        }
      },
      "title": "Get Application Versions in  repository"
    },
    "app_managerGetPackageVersionsInRepositoryResponse": {
      "type": "object",
      "properties": {
        "package_data_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerPackageData"
          },
          "title": "Repository App data"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get Application Versions in  repository"
    },
    "app_managerGetPackagesInRepositoryRequest": {
      "type": "object",
      "properties": {
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "optional filter for id type and visibility type\nQuery options"
        }
      },
      "title": "Get Application in  repository"
    },
    "app_managerGetPackagesInRepositoryResponse": {
      "type": "object",
      "properties": {
        "package_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/app_managerPackageNameIdGroups"
          },
          "title": "Repository  data"
        },
        "query_options": {
          "$ref": "#/definitions/common_platformQueryOptions",
          "title": "Query options"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Result"
        }
      },
      "title": "Get Application in  repository which are composite type"
    },
    "app_managerIdentifierType": {
      "type": "string",
      "enum": [
        "UNKNOWN_IDENTIFIER_TYPE",
        "APPLICATION",
        "POD",
        "RESOURCE"
      ],
      "default": "UNKNOWN_IDENTIFIER_TYPE",
      "description": "- APPLICATION: Composite package\n - POD: Executable package\n - RESOURCE: Physical file",
      "title": "Identifier type"
    },
    "app_managerInstallAndActivateApplicationRequest": {
      "type": "object",
      "properties": {
        "package_identifier": {
          "$ref": "#/definitions/app_managerPackageIdentifier",
          "title": "App to install"
        },
        "force": {
          "type": "boolean",
          "format": "boolean",
          "title": "force_install allows you to install apps without dependency checks"
        }
      },
      "title": "Install a Application Request"
    },
    "app_managerInstallAndActivateApplicationResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted to deleted"
        }
      },
      "title": "Install Application Response"
    },
    "app_managerInstalledApplicationId": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of all application ids"
        }
      },
      "title": "Notification object\nContext id : robot.orchestrator.capp.installedapplicationid.json\nApplication current state along with this events"
    },
    "app_managerPackageData": {
      "type": "object",
      "properties": {
        "package_identifier": {
          "$ref": "#/definitions/app_managerPackageIdentifier"
        },
        "summary": {
          "$ref": "#/definitions/app_managerSummary",
          "title": "Summary"
        },
        "identifier_Type": {
          "$ref": "#/definitions/app_managerIdentifierType",
          "title": "Identifier Type of APPLICATION,POD,RESOURCE"
        },
        "build_information": {
          "$ref": "#/definitions/app_managerBuildInformation",
          "title": "Build information"
        },
        "category": {
          "$ref": "#/definitions/app_managerCategory",
          "title": "Category to indicate whether this is a external or internal application"
        },
        "instructions": {
          "type": "string",
          "title": "Instructions for readme"
        },
        "is_install_job_queued": {
          "type": "boolean",
          "format": "boolean",
          "title": "Indicates whether a job is queued"
        }
      },
      "title": "Repository App package data"
    },
    "app_managerPackageIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id"
        },
        "version": {
          "type": "string",
          "title": "version"
        }
      },
      "title": "Repo app package identifier"
    },
    "app_managerPackageNameIdGroups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id for application"
        },
        "name": {
          "type": "string",
          "title": "Marketing application name"
        },
        "category": {
          "$ref": "#/definitions/app_managerCategory",
          "title": "Category to indicate whether this is a external or internal or platform"
        }
      },
      "title": "Repo Package Name id groups"
    },
    "app_managerPendingApplicationAction": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/app_managerApplicationAction",
          "title": "Application action"
        },
        "job_id": {
          "type": "string",
          "title": "job_id"
        }
      },
      "title": "Pending Action for Application"
    },
    "app_managerRemoveAllPackagesRepositoryResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted to deleted"
        }
      },
      "title": "RemoveAll repo app data request"
    },
    "app_managerRequestResult": {
      "type": "string",
      "enum": [
        "UNKNOWN_RESULT",
        "REJECTED",
        "ACCEPTED"
      ],
      "default": "UNKNOWN_RESULT",
      "description": "- REJECTED: Request has been rejected\n - ACCEPTED: Request has been accepted for processing",
      "title": "Request - reply\nresponse"
    },
    "app_managerResult": {
      "type": "object",
      "properties": {
        "request_result": {
          "$ref": "#/definitions/app_managerRequestResult",
          "description": "ResultValue indicated accept/reject for a request, not the outcome of the work itself."
        },
        "error": {
          "$ref": "#/definitions/common_platformError",
          "description": "Message is a textual description of reason for rejection, and can be safely passed on to operator through logs\nor UI."
        }
      },
      "description": "Result is used to convey whether an operation (individual or in a batch)\nhas been accepted or rejected. For sync API's an error or rejection indicates failure of operation.\nA string error message accompanies rejection to support troubleshooting. For notification objects,\nrejection represents failure to do intended operation."
    },
    "app_managerSmartLicensingData": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string",
          "title": "Smart licensing server product id"
        }
      },
      "title": "SmartLicensingInfo for CLMS"
    },
    "app_managerStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATE",
        "INSTALLED",
        "ACTIVE",
        "INACTIVE",
        "ACTIVATION_FAILED",
        "DEACTIVATION_FAILED",
        "INSTALL_FAILED",
        "UNINSTALL_FAILED",
        "UPDATE_FAILED",
        "INSTALLING",
        "ACTIVATING",
        "DEACTIVATING",
        "UNINSTALLING",
        "UPDATING",
        "UNINSTALLED"
      ],
      "default": "UNKNOWN_STATE",
      "title": "Application status"
    },
    "app_managerSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Immutable Unique application identifier"
        },
        "description": {
          "type": "string",
          "title": "Description of application"
        }
      },
      "title": "Summary -  marketing data"
    },
    "app_managerUninstallApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "Application id"
        },
        "force": {
          "type": "boolean",
          "format": "boolean",
          "title": "Setting force to true would uninstall application irrespective of application state"
        }
      },
      "title": "Uninstall a Application request"
    },
    "app_managerUninstallApplicationResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "Job id status for completion"
        },
        "result": {
          "$ref": "#/definitions/app_managerResult",
          "title": "Accepted to deleted"
        }
      },
      "title": "Deactivate a Application response"
    },
    "common_platformCWQuery": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "title": "SQL like filter query\nselect * from robotnodedata where provider.provider.name='nso101'"
        }
      },
      "title": "SQL like CW query style"
    },
    "common_platformComparisonOperator": {
      "type": "string",
      "enum": [
        "COMPARISON_UNKNOWN",
        "CONTAINS",
        "EQUAL"
      ],
      "default": "COMPARISON_UNKNOWN",
      "description": "- CONTAINS: STRING contains. May not be supported for all data types\n - EQUAL: Equal.",
      "title": "Comparison Operator"
    },
    "common_platformError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message is a textual description of reason for rejection, and can be safely passed on to operator through logs\nor UI"
        }
      },
      "title": "Error  associated with an Object"
    },
    "common_platformFilterKeyValue": {
      "type": "object",
      "properties": {
        "key_value": {
          "$ref": "#/definitions/common_platformKeyValue",
          "title": "Key Value"
        },
        "comparison_operator": {
          "$ref": "#/definitions/common_platformComparisonOperator",
          "title": "Comparison operator"
        }
      },
      "title": "Key Value filter set"
    },
    "common_platformFilterKeyValueSet": {
      "type": "object",
      "properties": {
        "filter_fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_platformFilterKeyValue"
          },
          "title": "Key Value filters"
        },
        "logical_operator": {
          "$ref": "#/definitions/common_platformLogicalOperator",
          "title": "The following is applied to all filters\n1. how individual filters are combined\n2. how the filtered result will be sorted\nLogical Operator"
        },
        "sort_operator": {
          "$ref": "#/definitions/common_platformSortOperator",
          "title": "Implicit sort ordering"
        }
      },
      "title": "KeyValue Filter Set"
    },
    "common_platformJob": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string",
          "title": "job_id"
        },
        "job_user": {
          "type": "string",
          "title": "User who created the job"
        },
        "start_time": {
          "type": "string",
          "format": "int64",
          "title": "start time in epoch milliseconds"
        },
        "completion_time": {
          "type": "string",
          "format": "int64",
          "title": "end time in epoch milliseconds"
        },
        "progress": {
          "type": "number",
          "format": "float",
          "title": "progress"
        },
        "job_status": {
          "$ref": "#/definitions/common_platformJobStatus",
          "title": "Job Status"
        },
        "job_context": {
          "$ref": "#/definitions/protobufAny",
          "title": "Job context"
        },
        "job_type": {
          "$ref": "#/definitions/protobufAny",
          "title": "Job Action"
        },
        "error": {
          "$ref": "#/definitions/common_platformError",
          "title": "Error"
        },
        "owner_type": {
          "$ref": "#/definitions/common_platformOwnerType",
          "title": "Job owner"
        }
      },
      "title": "Job abstraction details"
    },
    "common_platformJobStatus": {
      "type": "string",
      "enum": [
        "JOB_UNKNOWN",
        "JOB_CREATED",
        "JOB_IN_PROGRESS",
        "JOB_COMPLETED",
        "JOB_FAILED"
      ],
      "default": "JOB_UNKNOWN",
      "title": "Job Enum"
    },
    "common_platformKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "string_value": {
          "type": "string",
          "title": "Commented out is reserved for future use.\nbytes          bytes_value = 2;"
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean"
        },
        "uint64_value": {
          "type": "string",
          "format": "uint64",
          "title": "uint32         uint32_value = 5;"
        },
        "sint64_value": {
          "type": "string",
          "format": "int64",
          "title": "sint32         sint32_value = 7;"
        },
        "double_value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Generic Key value message"
    },
    "common_platformLogicalOperator": {
      "type": "string",
      "enum": [
        "OPERATOR_LOGICAL_UNKNOWN",
        "AND",
        "OR"
      ],
      "default": "OPERATOR_LOGICAL_UNKNOWN",
      "description": "- AND: Logical AND\n - OR: Logical OR",
      "title": "Logical Operator"
    },
    "common_platformOwnerType": {
      "type": "string",
      "enum": [
        "UNKNOWN_MANAGER",
        "APP_MANAGER",
        "BACKUP_RESTORE_MANAGER",
        "CLUSTER_MANAGER",
        "INSTALL_MANAGER"
      ],
      "default": "UNKNOWN_MANAGER",
      "title": "Different managers within platform"
    },
    "common_platformPagination": {
      "type": "object",
      "properties": {
        "page_token": {
          "type": "string",
          "title": "Page token to echo back to get next page, is empty or page token is empty,\nthen there is no more results"
        },
        "page_size": {
          "type": "integer",
          "format": "int64",
          "title": "page_size"
        }
      },
      "title": "Pagination option"
    },
    "common_platformQueryOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/common_platformFilterKeyValueSet",
          "title": "Generic key value filter set"
        },
        "cw_query": {
          "$ref": "#/definitions/common_platformCWQuery",
          "title": "SQL like filter query"
        },
        "pagination": {
          "$ref": "#/definitions/common_platformPagination",
          "title": "Pagination"
        }
      },
      "title": "Query Options"
    },
    "common_platformSortOperator": {
      "type": "string",
      "enum": [
        "SORT_UNSPECIFIED",
        "ASCENDING",
        "DESCENDING"
      ],
      "default": "SORT_UNSPECIFIED",
      "description": "The sort direction.\n\n - SORT_UNSPECIFIED: Unspecified. This value must not be used.\n - ASCENDING: Ascending.\n - DESCENDING: Descending."
    },
    "common_platformSshConfig": {
      "type": "object",
      "properties": {
        "remote_host": {
          "type": "string",
          "title": "Remote host"
        },
        "username": {
          "type": "string",
          "title": "Remote host user"
        },
        "password": {
          "type": "string",
          "title": "Remote host password"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "Remote host ssh port"
        }
      },
      "title": "SSHConfig for remote host"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  }
}

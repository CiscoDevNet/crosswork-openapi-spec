{
  "swagger": "2.0",
  "info": {
    "title": "Layer 3 Topology Details",
    "description": "This module defines a common base data model for a collection\nof nodes in a network.  Node definitions are further used\nin network topologies and inventories.  It represents\ninformation that either (1) is learned and automatically\npopulated or (2) results from applying network information\nthat has been configured per the 'ietf-network' data model,\nmirroring the corresponding data nodes in this data model.\nThe data model mirrors 'ietf-network' but contains only\nread-only state data.  The data model is not needed when the\nunderlying implementation infrastructure supports the Network\nManagement Datastore Architecture (NMDA).\nCopyright (c) 2018 IETF Trust and the persons identified as\nauthors of the code.  All rights reserved.\nRedistribution and use in source and binary forms, with or\nwithout modification, is permitted pursuant to, and subject\nto the license terms contained in, the Simplified BSD License\nset forth in Section 4.c of the IETF Trust's Legal Provisions\nRelating to IETF Documents\n(https://trustee.ietf.org/license-info).\nThis version of this YANG module is part of RFC 8345;\nsee the RFC itself for full legal notices.",
    "version": "2018-02-26"
  },
  "basePath": "/crosswork/nbi/optima/v1/restconf",
  "tags": [
    {
      "name": "Topology",
      "description": "APIs for retrieving Networks, Nodes, Termination Points, and Links"
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/yang-data+json"
  ],
  "consumes": [
    "application/yang-data+json"
  ],
  "paths": {
    "/data/ietf-network-state:networks": {
      "get": {
        "tags": [
          "Topology"
        ],
        "description": "Serves as a top-level container for a list of networks. Optima currently only supports the concept of a single network.",
        "operationId": "data_ietf_network_state_networks_get",
        "produces": [
          "application/yang-data+json"
        ],
        "responses": {
          "200": {
            "description": "Serves as a top-level container for a list of networks.",
            "schema": {
              "$ref": "#/definitions/data_ietf-network-state_networks"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/ietf-network-state:networks/network={network-id}": {
      "get": {
        "tags": [
          "Topology"
        ],
        "description": "Describes a network.\nA network typically contains an inventory of nodes,\ntopological information (augmented through the\nnetwork-topology data model), and layering information.",
        "operationId": "data_ietf_network_state_networks_network_network_network_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/network-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Describes a network.\nA network typically contains an inventory of nodes,\ntopological information (augmented through the\nnetwork-topology data model), and layering information.",
            "schema": {
              "$ref": "#/definitions/data_ietf-network-state_networks_network_network-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/ietf-network-state:networks/network={network-id}/node={node-id}": {
      "get": {
        "tags": [
          "Topology"
        ],
        "description": "The inventory of nodes of this network.",
        "operationId": "data_ietf_network_state_networks_network_network_id_node_node_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/network-id"
          },
          {
            "$ref": "#/parameters/node-id"
          }
        ],
        "responses": {
          "200": {
            "description": "The inventory of nodes of this network.",
            "schema": {
              "$ref": "#/definitions/data_ietf-network-state_networks_network_network-id_node_node-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/ietf-network-state:networks/network={network-id}/node={node-id}/ietf-network-topology-state:termination-point={termination-point-id}": {
      "get": {
        "tags": [
          "Topology"
        ],
        "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface.",
        "operationId": "data_ietf_network_state_networks_network_network_network_id_node_node_node_id_ietf_network_topology_state_termination_point_ietf_network_topology_state_termination_point_tp_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/network-id"
          },
          {
            "$ref": "#/parameters/node-id"
          },
          {
            "$ref": "#/parameters/termination-point-id"
          }
        ],
        "responses": {
          "200": {
            "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface.",
            "schema": {
              "$ref": "#/definitions/data_ietf-network-state_networks_network_network-id_node_node-id_ietf-network-topology-state_termination-point_termination-point-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/ietf-network-state:networks/network={network-id}/ietf-network-topology-state:link={link-id}": {
      "get": {
        "tags": [
          "Topology"
        ],
        "description": "A network link connects a local (source) node and\na remote (destination) node via a set of the respective\nnode's termination points.  It is possible to have several\nlinks between the same source and destination nodes.\nLikewise, a link could potentially be re-homed between\ntermination points.  Therefore, in order to ensure that we\nwould always know to distinguish between links, every link\nis identified by a dedicated link identifier.  Note that a\nlink models a point-to-point link, not a multipoint link.",
        "operationId": "data_ietf_network_state_networks_network_network_network_id_ietf_network_topology_state_link_ietf_network_topology_state_link_link_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/network-id"
          },
          {
            "$ref": "#/parameters/link-id"
          }
        ],
        "responses": {
          "200": {
            "description": "A network link connects a local (source) node and\na remote (destination) node via a set of the respective\nnode's termination points.  It is possible to have several\nlinks between the same source and destination nodes.\nLikewise, a link could potentially be re-homed between\ntermination points.  Therefore, in order to ensure that we\nwould always know to distinguish between links, every link\nis identified by a dedicated link identifier.  Note that a\nlink models a point-to-point link, not a multipoint link.",
            "schema": {
              "$ref": "#/definitions/data_ietf-network-state_networks_network_network-id_ietf-network-topology-state_link_link-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "parameters": {
    "node-id": {
      "name": "node-id",
      "in": "path",
      "description": "Uniquely identifies a node within the containing\nnetwork.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "network-id": {
      "name": "network-id",
      "in": "path",
      "description": "Identifies a network.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "termination-point-id": {
      "name": "termination-point-id",
      "in": "path",
      "description": "Termination point identifier.",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "link-id": {
      "name": "link-id",
      "in": "path",
      "description": "The identifier of a link in the topology.\nA link is specific to a topology to which it belongs.",
      "required": true,
      "type": "string",
      "format": "string"
    }
  },
  "responses": {
    "200": {
      "description": "OK"
    },
    "201": {
      "description": "Created"
    },
    "204": {
      "description": "No Content"
    },
    "400": {
      "description": "Bad Request"
    },
    "401": {
      "description": "Unauthorized"
    },
    "404": {
      "description": "Not Found"
    },
    "405": {
      "description": "Method Not Allowed"
    },
    "409": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "data_ietf-network-state_networks": {
      "type": "object",
      "properties": {
        "ietf-network-state:networks": {
          "description": "Serves as a top-level container for a list of networks. (non-presence)",
          "type": "object",
          "properties": {
            "network": {
              "type": "array",
              "description": "Describes a network.\nA network typically contains an inventory of nodes,\ntopological information (augmented through the\nnetwork-topology data model), and layering information. (list)",
              "items": {
                "type": "object",
                "properties": {
                  "network-types": {
                    "description": "Serves as an augmentation target.\nThe network type is indicated through corresponding\npresence containers augmented into this container. (non-presence)",
                    "type": "object",
                    "properties": {
                      "ietf-l3-unicast-topology-state:l3-unicast-topology": {
                        "description": "The presence of the container node indicates L3 Unicast\ntopology (presence)",
                        "type": "object",
                        "properties": {
                          "cisco-crosswork-isis-topology:isis": {
                            "description": "Presence of this node identifies the ISIS topology type. (presence)",
                            "type": "object",
                            "properties": {
                            }
                          },
                          "cisco-crosswork-ospf-topology:ospf": {
                            "description": "Presence of this node identifies the OSPF topology type. (presence)",
                            "type": "object",
                            "properties": {
                            }
                          },
                          "ietf-sr-topology-state:sr-mpls": {
                            "description": "Its presence identifies the SR topology type. (presence)",
                            "type": "object",
                            "properties": {
                            }
                          }
                        }
                      }
                    }
                  },
                  "network-id": {
                    "description": "Identifies a network. (leaf)",
                    "type": "string",
                    "format": "string"
                  },
                  "node": {
                    "type": "array",
                    "description": "The inventory of nodes of this network. (list)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "node-id": {
                          "description": "Uniquely identifies a node within the containing\nnetwork. (leaf)",
                          "type": "string",
                          "format": "string"
                        },
                        "ietf-network-topology-state:termination-point": {
                          "type": "array",
                          "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface. (list)",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ietf-network-topology-state:tp-id": {
                                "description": "Termination point identifier. (leaf)",
                                "type": "string",
                                "format": "string"
                              },
                              "ietf-l3-unicast-topology-state:l3-termination-point-attributes": {
                                "description": "Contains termination point attributes (non-presence)",
                                "type": "object",
                                "properties": {
                                  "ietf-l3-unicast-topology-state:ip-address": {
                                    "type": "array",
                                    "items": {
                                      "description": "IPv4 or IPv6 address. (leaf-list)",
                                      "type": "string",
                                      "format": "union"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ietf-l3-unicast-topology-state:l3-node-attributes": {
                          "description": "Contains node attributes (non-presence)",
                          "type": "object",
                          "properties": {
                            "ietf-l3-unicast-topology-state:name": {
                              "description": "Node name (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "ietf-l3-unicast-topology-state:flag": {
                              "type": "array",
                              "items": {
                                "description": "Node flags (leaf-list)",
                                "type": "string",
                                "format": "identityref"
                              }
                            },
                            "ietf-l3-unicast-topology-state:router-id": {
                              "type": "array",
                              "items": {
                                "description": "Router-id for the node (leaf-list)",
                                "type": "string",
                                "format": "string"
                              }
                            },
                            "ietf-l3-unicast-topology-state:prefix": {
                              "type": "array",
                              "description": "A list of prefixes along with their attributes (list)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ietf-l3-unicast-topology-state:prefix": {
                                    "description": "IP prefix value (leaf)",
                                    "type": "string",
                                    "format": "union"
                                  },
                                  "ietf-l3-unicast-topology-state:metric": {
                                    "description": "Prefix metric (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "ietf-l3-unicast-topology-state:flag": {
                                    "type": "array",
                                    "items": {
                                      "description": "Prefix flags (leaf-list)",
                                      "type": "string",
                                      "format": "identityref"
                                    }
                                  },
                                  "ietf-sr-topology-state:sr": {
                                    "description": "Containing SR attributes for a prefix. (presence)",
                                    "type": "array",
                                    "items": {
                                      "description": "sr-mpls attributes list (leaf-list)",
                                      "type": "object",
                                      "properties": {
                                        "ietf-sr-topology-state:value-type": {
                                          "description": "This leaf defines how value must be interpreted. (leaf)",
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "index",
                                          "enum": [
                                            "index",
                                            "absolute"
                                          ]
                                        },
                                        "ietf-sr-topology-state:start-sid": {
                                          "description": "Value associated with prefix. The value must be\ninterpreted in the context of value-type. (leaf)",
                                          "type": "integer",
                                          "format": "uint32"
                                        },
                                        "ietf-sr-topology-state:range": {
                                          "description": "Indicates how many SIDs can be allocated. (leaf)",
                                          "type": "integer",
                                          "format": "uint32"
                                        },
                                        "ietf-sr-topology-state:algorithm": {
                                          "description": "Prefix-sid algorithm. (leaf)",
                                          "type": "string",
                                          "format": "identityref"
                                        },
                                        "ietf-sr-topology-state:last-hop-behavior": {
                                          "description": "Configure last hop behavior. (leaf)",
                                          "type": "string",
                                          "format": "enumeration",
                                          "default": "explicit-null",
                                          "enum": [
                                            "explicit-null",
                                            "no-php",
                                            "php"
                                          ]
                                        },
                                        "ietf-sr-topology-state:is-local": {
                                          "description": "'true' if the SID is local. (leaf)",
                                          "type": "string",
                                          "format": "boolean"
                                        },
                                        "ietf-sr-topology-state:is-node": {
                                          "description": "'true' if the Prefix-SID refers to the router identified\n by the prefix.  Typically, the leaf 'is-node' (N-Flag)\n is set on Prefix-SIDs attached to a router loopback\n address. (leaf)",
                                          "type": "string",
                                          "format": "boolean"
                                        },
                                        "ietf-sr-topology-state:is-readvertisment": {
                                          "description": "'true' if the prefix to which this Prefix-SID is attached,\n has been propagated by the router from another\n topology by redistribution. (leaf)",
                                          "type": "string",
                                          "format": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "cisco-crosswork-isis-topology:isis-node-attributes": {
                              "description": "ISIS attributes for a specific node (non-presence)",
                              "type": "object",
                              "properties": {
                                "cisco-crosswork-isis-topology:system-id": {
                                  "description": "ISIS System ID, a 6 octet numerical value (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "cisco-crosswork-isis-topology:area": {
                                  "type": "array",
                                  "items": {
                                    "description": "List of Area addresses.\n*** Should we return only a single Area address corresponding\nto the current network?? (leaf-list)",
                                    "type": "string",
                                    "format": "string"
                                  }
                                },
                                "cisco-crosswork-isis-topology:level": {
                                  "description": "Level 1, Level 2 or Level 1 & 2 (leaf)",
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "level-1",
                                  "enum": [
                                    "level-1",
                                    "level-2",
                                    "level-all"
                                  ]
                                }
                              }
                            },
                            "cisco-crosswork-ospf-topology:ospf-node-attributes": {
                              "description": "Contains node's OSPF attributes (non-presence)",
                              "type": "object",
                              "properties": {
                                "cisco-crosswork-ospf-topology:ospf-router-id": {
                                  "description": "OSPF router ID, which is an IPv4 address.\n*** Note, only one router-ID is reported, corresponwing\nto the IGP domain of the current network (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "cisco-crosswork-ospf-topology:area-id": {
                                  "type": "array",
                                  "items": {
                                    "description": "List of OSPF area IDs, each represented as an IPv4 address value\n*** Should we report all Areas or just the one corresponwing to\nthe network?? (leaf-list)",
                                    "type": "string",
                                    "format": "string"
                                  }
                                }
                              }
                            },
                            "ietf-sr-topology-state:sr": {
                              "description": "Containing SR attributes. (non-presence)",
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:srgb": {
                                  "type": "array",
                                  "description": "List of global blocks to be advertised. (list)",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "ietf-sr-topology-state:lower-bound": {
                                        "description": "Lower value in the label range. (leaf)",
                                        "type": "integer",
                                        "format": "uint32"
                                      },
                                      "ietf-sr-topology-state:upper-bound": {
                                        "description": "Upper value in the label range. (leaf)",
                                        "type": "integer",
                                        "format": "uint32"
                                      }
                                    }
                                  }
                                },
                                "ietf-sr-topology-state:srlb": {
                                  "type": "array",
                                  "description": "List of SRLBs. (list)",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "ietf-sr-topology-state:lower-bound": {
                                        "description": "Lower value in the label range. (leaf)",
                                        "type": "integer",
                                        "format": "uint32"
                                      },
                                      "ietf-sr-topology-state:upper-bound": {
                                        "description": "Upper value in the label range. (leaf)",
                                        "type": "integer",
                                        "format": "uint32"
                                      }
                                    }
                                  }
                                },
                                "ietf-sr-topology-state:node-capabilities": {
                                  "description": "Shows the SR capability of the node. (non-presence)",
                                  "type": "object",
                                  "properties": {
                                    "ietf-sr-topology-state:transport-planes": {
                                      "type": "array",
                                      "description": "List of supported transport planes. (list)",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ietf-sr-topology-state:transport-plane": {
                                            "description": "Transport plane supported (leaf)",
                                            "type": "string",
                                            "format": "identityref"
                                          }
                                        }
                                      }
                                    },
                                    "ietf-sr-topology-state:entropy-readable-label-depth": {
                                      "description": "Maximum label stack depth that a router can read. (leaf)",
                                      "type": "integer",
                                      "format": "byte"
                                    }
                                  }
                                },
                                "ietf-sr-topology-state:msd": {
                                  "description": "Node MSD is the lowest MSD supported by the node. (leaf)",
                                  "type": "integer",
                                  "format": "byte"
                                },
                                "ietf-sr-topology-state:information-source": {
                                  "description": "Indicates the type of the information source. (leaf)",
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "unknown",
                                  "enum": [
                                    "unknown",
                                    "locally-configured",
                                    "ospfv2",
                                    "ospfv3",
                                    "isis",
                                    "bgp-ls",
                                    "system-processed",
                                    "other"
                                  ]
                                },
                                "ietf-sr-topology-state:information-source-instance": {
                                  "description": "The name indicating the instance of the information\nsource. (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "ietf-sr-topology-state:information-source-state": {
                                  "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                                  "type": "object",
                                  "properties": {
                                    "ietf-sr-topology-state:credibility-preference": {
                                      "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                                      "type": "integer",
                                      "format": "uint16"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ietf-network-topology-state:link": {
                    "type": "array",
                    "description": "A network link connects a local (source) node and\na remote (destination) node via a set of the respective\nnode's termination points.  It is possible to have several\nlinks between the same source and destination nodes.\nLikewise, a link could potentially be re-homed between\ntermination points.  Therefore, in order to ensure that we\nwould always know to distinguish between links, every link\nis identified by a dedicated link identifier.  Note that a\nlink models a point-to-point link, not a multipoint link. (list)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ietf-network-topology-state:source": {
                          "description": "This container holds the logical source of a particular\nlink. (non-presence)",
                          "type": "object",
                          "properties": {
                            "ietf-network-topology-state:source-node": {
                              "description": "Source node identifier.  Must be in the same topology. (leaf)",
                              "type": "string",
                              "format": "leafref"
                            },
                            "ietf-network-topology-state:source-tp": {
                              "description": "This termination point is located within the source node\nand terminates the link. (leaf)",
                              "type": "string",
                              "format": "leafref"
                            }
                          }
                        },
                        "ietf-network-topology-state:destination": {
                          "description": "This container holds the logical destination of a\nparticular link. (non-presence)",
                          "type": "object",
                          "properties": {
                            "ietf-network-topology-state:dest-node": {
                              "description": "Destination node identifier.  Must be in the same\nnetwork. (leaf)",
                              "type": "string",
                              "format": "leafref"
                            },
                            "ietf-network-topology-state:dest-tp": {
                              "description": "This termination point is located within the\ndestination node and terminates the link. (leaf)",
                              "type": "string",
                              "format": "leafref"
                            }
                          }
                        },
                        "ietf-network-topology-state:link-id": {
                          "description": "The identifier of a link in the topology.\nA link is specific to a topology to which it belongs. (leaf)",
                          "type": "string",
                          "format": "string"
                        },
                        "ietf-l3-unicast-topology-state:l3-link-attributes": {
                          "description": "Contains link attributes (non-presence)",
                          "type": "object",
                          "properties": {
                            "ietf-l3-unicast-topology-state:name": {
                              "description": "Link Name (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "ietf-l3-unicast-topology-state:flag": {
                              "type": "array",
                              "items": {
                                "description": "Link flags (leaf-list)",
                                "type": "string",
                                "format": "identityref"
                              }
                            },
                            "ietf-l3-unicast-topology-state:metric1": {
                              "description": "Link Metric 1 for reporting IGP metric value (leaf)",
                              "type": "integer",
                              "format": "uint64"
                            },
                            "ietf-l3-unicast-topology-state:metric2": {
                              "description": "Link Metric 2 for reporting TE metric value (leaf)",
                              "type": "integer",
                              "format": "uint64"
                            },
                            "cisco-crosswork-isis-topology:isis-link-attributes": {
                              "description": "ISIS link/ adjacency attributes (non-presence)",
                              "type": "object",
                              "properties": {
                                "cisco-crosswork-isis-topology:net": {
                                  "description": "ISIS Network Entity Title which identifies an instance of ISIS (non-presence)",
                                  "type": "object",
                                  "properties": {
                                    "cisco-crosswork-isis-topology:system-id": {
                                      "description": "ISIS System ID which is a 6 octet numerical value (leaf)",
                                      "type": "string",
                                      "format": "string"
                                    },
                                    "cisco-crosswork-isis-topology:area": {
                                      "description": "ISIS Area address. Numerical value of 1 to 13 octets (leaf)",
                                      "type": "string",
                                      "format": "string"
                                    }
                                  }
                                },
                                "cisco-crosswork-isis-topology:level": {
                                  "description": "ISIS level of the link/ adjacency (leaf)",
                                  "type": "integer",
                                  "format": "byte"
                                }
                              }
                            },
                            "cisco-crosswork-ospf-topology:ospf-link-attributes": {
                              "description": "Containing OSPF link attributes (non-presence)",
                              "type": "object",
                              "properties": {
                                "cisco-crosswork-ospf-topology:ospf-router-id": {
                                  "description": "OSPF router ID, which is an IPv4 address,\nof the local host (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "cisco-crosswork-ospf-topology:area-id": {
                                  "description": "OSPF area ID, represented as an IPv4 address value (leaf)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            },
                            "ietf-sr-topology-state:sr": {
                              "description": "Containing SR attributes. (presence)",
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:advertise-protection": {
                                  "description": "If set, the Adj-SID refers to an\nadjacency being protected. (leaf)",
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "single",
                                  "enum": [
                                    "single",
                                    "dual"
                                  ]
                                },
                                "ietf-sr-topology-state:msd": {
                                  "description": "SID depth of the interface associated with the link. (leaf)",
                                  "type": "integer",
                                  "format": "byte"
                                },
                                "ietf-sr-topology-state:sids": {
                                  "type": "array",
                                  "description": "List of SIDs. (list)",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "ietf-sr-topology-state:value-type": {
                                        "description": "This leaf defines how value must be interpreted. (leaf)",
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "index",
                                        "enum": [
                                          "index",
                                          "absolute"
                                        ]
                                      },
                                      "ietf-sr-topology-state:sid": {
                                        "description": "Adjacency SID, which can be either IGP-Adjacency SID\nor BGP PeerAdj SID, depending on the context. (leaf)",
                                        "type": "integer",
                                        "format": "uint32"
                                      },
                                      "ietf-sr-topology-state:is-local": {
                                        "description": "'true' if the SID is local. (leaf)",
                                        "type": "string",
                                        "format": "boolean"
                                      },
                                      "ietf-sr-topology-state:address-family": {
                                        "description": "This leaf defines the F-Flag (Address-Family flag) of the\nSID. (leaf)",
                                        "type": "string",
                                        "format": "enumeration",
                                        "default": "ipv4",
                                        "enum": [
                                          "ipv4",
                                          "ipv6"
                                        ]
                                      },
                                      "ietf-sr-topology-state:is-backup": {
                                        "description": "'true' if the SID is a backup. (leaf)",
                                        "type": "string",
                                        "format": "boolean"
                                      },
                                      "ietf-sr-topology-state:is-part-of-set": {
                                        "description": "'true' if the SID is part of a set. (leaf)",
                                        "type": "string",
                                        "format": "boolean"
                                      },
                                      "ietf-sr-topology-state:is-persistent": {
                                        "description": "'true' if the SID is persistently allocated. (leaf)",
                                        "type": "string",
                                        "format": "boolean"
                                      },
                                      "ietf-sr-topology-state:is-on-lan": {
                                        "description": "'true' if on a lan. (leaf)",
                                        "type": "string",
                                        "format": "boolean"
                                      }
                                    }
                                  }
                                },
                                "ietf-sr-topology-state:information-source": {
                                  "description": "Indicates the type of the information source. (leaf)",
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "unknown",
                                  "enum": [
                                    "unknown",
                                    "locally-configured",
                                    "ospfv2",
                                    "ospfv3",
                                    "isis",
                                    "bgp-ls",
                                    "system-processed",
                                    "other"
                                  ]
                                },
                                "ietf-sr-topology-state:information-source-instance": {
                                  "description": "The name indicating the instance of the information\nsource. (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "ietf-sr-topology-state:information-source-state": {
                                  "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                                  "type": "object",
                                  "properties": {
                                    "ietf-sr-topology-state:credibility-preference": {
                                      "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                                      "type": "integer",
                                      "format": "uint16"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ietf-l3-unicast-topology-state:l3-topology-attributes": {
                    "description": "Contains topology attributes (non-presence)",
                    "type": "object",
                    "properties": {
                      "ietf-l3-unicast-topology-state:name": {
                        "description": "Name of the topology (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "ietf-l3-unicast-topology-state:flag": {
                        "type": "array",
                        "items": {
                          "description": "Topology flags (leaf-list)",
                          "type": "string",
                          "format": "identityref"
                        }
                      },
                      "cisco-crosswork-isis-topology:isis-topology-attributes": {
                        "description": "Contains ISIS topology attributes.\n*** Contains a single Area address, which means each nw:ietf-network\nmust contain a single ISIS Area. is this what we want??\n*** How do we identify areas from different ISIS domains??\n*** What would the behavior be for a query asking for all ietf-networks?? (non-presence)",
                        "type": "object",
                        "properties": {
                          "cisco-crosswork-isis-topology:area": {
                            "description": "ISIS Area address. Numerical value of 1 to 13 octets (leaf)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      },
                      "cisco-crosswork-ospf-topology:ospf-topology-attributes": {
                        "description": "OSPF topology attributes (non-presence)",
                        "type": "object",
                        "properties": {
                          "cisco-crosswork-ospf-topology:area-id": {
                            "description": "OSPF area ID, represented as an IPv4 address value.\n*** Contains a single Area ID, which means each ietf-network\nmust contain a single OSPF Area. is this what we want??\n*** How do we identify areas from different OSPF domains?? (leaf)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      },
                      "ietf-sr-topology-state:sr": {
                        "description": "Containing SR attributes. (non-presence)",
                        "type": "object",
                        "properties": {
                          "ietf-sr-topology-state:srgb": {
                            "type": "array",
                            "description": "List of global blocks to be advertised. (list)",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:lower-bound": {
                                  "description": "Lower value in the label range. (leaf)",
                                  "type": "integer",
                                  "format": "uint32"
                                },
                                "ietf-sr-topology-state:upper-bound": {
                                  "description": "Upper value in the label range. (leaf)",
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_ietf-network-state_networks_network_network-id": {
      "type": "object",
      "properties": {
        "ietf-network-state:network": {
          "type": "array",
          "description": "Describes a network.\nA network typically contains an inventory of nodes,\ntopological information (augmented through the\nnetwork-topology data model), and layering information. (list)",
          "items": {
            "type": "object",
            "properties": {
              "network-types": {
                "description": "Serves as an augmentation target.\nThe network type is indicated through corresponding\npresence containers augmented into this container. (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-l3-unicast-topology-state:l3-unicast-topology": {
                    "description": "The presence of the container node indicates L3 Unicast\ntopology (presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-isis-topology:isis": {
                        "description": "Presence of this node identifies the ISIS topology type. (presence)",
                        "type": "object",
                        "properties": {
                        }
                      },
                      "cisco-crosswork-ospf-topology:ospf": {
                        "description": "Presence of this node identifies the OSPF topology type. (presence)",
                        "type": "object",
                        "properties": {
                        }
                      },
                      "ietf-sr-topology-state:sr-mpls": {
                        "description": "Its presence identifies the SR topology type. (presence)",
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "network-id": {
                "description": "Identifies a network. (leaf)",
                "type": "string",
                "format": "string"
              },
              "node": {
                "type": "array",
                "description": "The inventory of nodes of this network. (list)",
                "items": {
                  "type": "object",
                  "properties": {
                    "node-id": {
                      "description": "Uniquely identifies a node within the containing\nnetwork. (leaf)",
                      "type": "string",
                      "format": "string"
                    },
                    "ietf-network-topology-state:termination-point": {
                      "type": "array",
                      "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface. (list)",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ietf-network-topology-state:tp-id": {
                            "description": "Termination point identifier. (leaf)",
                            "type": "string",
                            "format": "string"
                          },
                          "ietf-l3-unicast-topology-state:l3-termination-point-attributes": {
                            "description": "Contains termination point attributes (non-presence)",
                            "type": "object",
                            "properties": {
                              "ietf-l3-unicast-topology-state:ip-address": {
                                "type": "array",
                                "items": {
                                  "description": "IPv4 or IPv6 address. (leaf-list)",
                                  "type": "string",
                                  "format": "union"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ietf-l3-unicast-topology-state:l3-node-attributes": {
                      "description": "Contains node attributes (non-presence)",
                      "type": "object",
                      "properties": {
                        "ietf-l3-unicast-topology-state:name": {
                          "description": "Node name (leaf)",
                          "type": "string",
                          "format": "string"
                        },
                        "ietf-l3-unicast-topology-state:flag": {
                          "type": "array",
                          "items": {
                            "description": "Node flags (leaf-list)",
                            "type": "string",
                            "format": "identityref"
                          }
                        },
                        "ietf-l3-unicast-topology-state:router-id": {
                          "type": "array",
                          "items": {
                            "description": "Router-id for the node (leaf-list)",
                            "type": "string",
                            "format": "string"
                          }
                        },
                        "ietf-l3-unicast-topology-state:prefix": {
                          "type": "array",
                          "description": "A list of prefixes along with their attributes (list)",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ietf-l3-unicast-topology-state:prefix": {
                                "description": "IP prefix value (leaf)",
                                "type": "string",
                                "format": "union"
                              },
                              "ietf-l3-unicast-topology-state:metric": {
                                "description": "Prefix metric (leaf)",
                                "type": "integer",
                                "format": "uint32"
                              },
                              "ietf-l3-unicast-topology-state:flag": {
                                "type": "array",
                                "items": {
                                  "description": "Prefix flags (leaf-list)",
                                  "type": "string",
                                  "format": "identityref"
                                }
                              },
                              "ietf-sr-topology-state:sr": {
                                "description": "Containing SR attributes for a prefix. (presence)",
                                "type": "array",
                                "items": {
                                  "description": "sr-mpls attribtes list (leaf-list)",
                                  "type": "object",
                                  "properties": {
                                    "ietf-sr-topology-state:value-type": {
                                      "description": "This leaf defines how value must be interpreted. (leaf)",
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "index",
                                      "enum": [
                                        "index",
                                        "absolute"
                                      ]
                                    },
                                    "ietf-sr-topology-state:start-sid": {
                                      "description": "Value associated with prefix. The value must be\ninterpreted in the context of value-type. (leaf)",
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "ietf-sr-topology-state:range": {
                                      "description": "Indicates how many SIDs can be allocated. (leaf)",
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "ietf-sr-topology-state:algorithm": {
                                      "description": "Prefix-sid algorithm. (leaf)",
                                      "type": "string",
                                      "format": "identityref"
                                    },
                                    "ietf-sr-topology-state:last-hop-behavior": {
                                      "description": "Configure last hop behavior. (leaf)",
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "explicit-null",
                                      "enum": [
                                        "explicit-null",
                                        "no-php",
                                        "php"
                                      ]
                                    },
                                    "ietf-sr-topology-state:is-local": {
                                      "description": "'true' if the SID is local. (leaf)",
                                      "type": "string",
                                      "format": "boolean"
                                    },
                                    "ietf-sr-topology-state:is-node": {
                                      "description": "'true' if the Prefix-SID refers to the router identified\n by the prefix.  Typically, the leaf 'is-node' (N-Flag)\n is set on Prefix-SIDs attached to a router loopback\n address. (leaf)",
                                      "type": "string",
                                      "format": "boolean"
                                    },
                                    "ietf-sr-topology-state:is-readvertisment": {
                                      "description": "'true' if the prefix to which this Prefix-SID is attached,\n has been propagated by the router from another\n topology by redistribution. (leaf)",
                                      "type": "string",
                                      "format": "boolean"
                                    }
                                  }
                                }

                              }
                            }
                          }
                        },
                        "cisco-crosswork-isis-topology:isis-node-attributes": {
                          "description": "ISIS attributes for a specific node (non-presence)",
                          "type": "object",
                          "properties": {
                            "cisco-crosswork-isis-topology:system-id": {
                              "description": "ISIS System ID, a 6 octet numerical value (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "cisco-crosswork-isis-topology:area": {
                              "type": "array",
                              "items": {
                                "description": "List of Area addresses.\n*** Should we return only a single Area address corresponding\nto the current network?? (leaf-list)",
                                "type": "string",
                                "format": "string"
                              }
                            },
                            "cisco-crosswork-isis-topology:level": {
                              "description": "Level 1, Level 2 or Level 1 & 2 (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "level-1",
                              "enum": [
                                "level-1",
                                "level-2",
                                "level-all"
                              ]
                            }
                          }
                        },
                        "cisco-crosswork-ospf-topology:ospf-node-attributes": {
                          "description": "Contains node's OSPF attributes (non-presence)",
                          "type": "object",
                          "properties": {
                            "cisco-crosswork-ospf-topology:ospf-router-id": {
                              "description": "OSPF router ID, which is an IPv4 address.\n*** Note, only one router-ID is reported, corresponwing\nto the IGP domain of the current network (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "cisco-crosswork-ospf-topology:area-id": {
                              "type": "array",
                              "items": {
                                "description": "List of OSPF area IDs, each represented as an IPv4 address value\n*** Should we report all Areas or just the one corresponwing to\nthe network?? (leaf-list)",
                                "type": "string",
                                "format": "string"
                              }
                            }
                          }
                        },
                        "ietf-sr-topology-state:sr": {
                          "description": "Containing SR attributes. (non-presence)",
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:srgb": {
                              "type": "array",
                              "description": "List of global blocks to be advertised. (list)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ietf-sr-topology-state:lower-bound": {
                                    "description": "Lower value in the label range. (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "ietf-sr-topology-state:upper-bound": {
                                    "description": "Upper value in the label range. (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  }
                                }
                              }
                            },
                            "ietf-sr-topology-state:srlb": {
                              "type": "array",
                              "description": "List of SRLBs. (list)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ietf-sr-topology-state:lower-bound": {
                                    "description": "Lower value in the label range. (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "ietf-sr-topology-state:upper-bound": {
                                    "description": "Upper value in the label range. (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  }
                                }
                              }
                            },
                            "ietf-sr-topology-state:node-capabilities": {
                              "description": "Shows the SR capability of the node. (non-presence)",
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:transport-planes": {
                                  "type": "array",
                                  "description": "List of supported transport planes. (list)",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "ietf-sr-topology-state:transport-plane": {
                                        "description": "Transport plane supported (leaf)",
                                        "type": "string",
                                        "format": "identityref"
                                      }
                                    }
                                  }
                                },
                                "ietf-sr-topology-state:entropy-readable-label-depth": {
                                  "description": "Maximum label stack depth that a router can read. (leaf)",
                                  "type": "integer",
                                  "format": "byte"
                                }
                              }
                            },
                            "ietf-sr-topology-state:msd": {
                              "description": "Node MSD is the lowest MSD supported by the node. (leaf)",
                              "type": "integer",
                              "format": "byte"
                            },
                            "ietf-sr-topology-state:information-source": {
                              "description": "Indicates the type of the information source. (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "unknown",
                              "enum": [
                                "unknown",
                                "locally-configured",
                                "ospfv2",
                                "ospfv3",
                                "isis",
                                "bgp-ls",
                                "system-processed",
                                "other"
                              ]
                            },
                            "ietf-sr-topology-state:information-source-instance": {
                              "description": "The name indicating the instance of the information\nsource. (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "ietf-sr-topology-state:information-source-state": {
                              "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:credibility-preference": {
                                  "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                                  "type": "integer",
                                  "format": "uint16"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ietf-network-topology-state:link": {
                "type": "array",
                "description": "A network link connects a local (source) node and\na remote (destination) node via a set of the respective\nnode's termination points.  It is possible to have several\nlinks between the same source and destination nodes.\nLikewise, a link could potentially be re-homed between\ntermination points.  Therefore, in order to ensure that we\nwould always know to distinguish between links, every link\nis identified by a dedicated link identifier.  Note that a\nlink models a point-to-point link, not a multipoint link. (list)",
                "items": {
                  "type": "object",
                  "properties": {
                    "ietf-network-topology-state:source": {
                      "description": "This container holds the logical source of a particular\nlink. (non-presence)",
                      "type": "object",
                      "properties": {
                        "ietf-network-topology-state:source-node": {
                          "description": "Source node identifier.  Must be in the same topology. (leaf)",
                          "type": "string",
                          "format": "leafref"
                        },
                        "ietf-network-topology-state:source-tp": {
                          "description": "This termination point is located within the source node\nand terminates the link. (leaf)",
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    },
                    "ietf-network-topology-state:destination": {
                      "description": "This container holds the logical destination of a\nparticular link. (non-presence)",
                      "type": "object",
                      "properties": {
                        "ietf-network-topology-state:dest-node": {
                          "description": "Destination node identifier.  Must be in the same\nnetwork. (leaf)",
                          "type": "string",
                          "format": "leafref"
                        },
                        "ietf-network-topology-state:dest-tp": {
                          "description": "This termination point is located within the\ndestination node and terminates the link. (leaf)",
                          "type": "string",
                          "format": "leafref"
                        }
                      }
                    },
                    "ietf-network-topology-state:link-id": {
                      "description": "The identifier of a link in the topology.\nA link is specific to a topology to which it belongs. (leaf)",
                      "type": "string",
                      "format": "string"
                    },
                    "ietf-l3-unicast-topology-state:l3-link-attributes": {
                      "description": "Contains link attributes (non-presence)",
                      "type": "object",
                      "properties": {
                        "ietf-l3-unicast-topology-state:name": {
                          "description": "Link Name (leaf)",
                          "type": "string",
                          "format": "string"
                        },
                        "ietf-l3-unicast-topology-state:flag": {
                          "type": "array",
                          "items": {
                            "description": "Link flags (leaf-list)",
                            "type": "string",
                            "format": "identityref"
                          }
                        },
                        "ietf-l3-unicast-topology-state:metric1": {
                          "description": "Link Metric 1 for reporting IGP metric value (leaf)",
                          "type": "integer",
                          "format": "uint64"
                        },
                        "ietf-l3-unicast-topology-state:metric2": {
                          "description": "Link Metric 2 for reporting TE metric value (leaf)",
                          "type": "integer",
                          "format": "uint64"
                        },
                        "cisco-crosswork-isis-topology:isis-link-attributes": {
                          "description": "ISIS link/ adjacency attributes (non-presence)",
                          "type": "object",
                          "properties": {
                            "cisco-crosswork-isis-topology:net": {
                              "description": "ISIS Network Entity Title which identifies an instance of ISIS (non-presence)",
                              "type": "object",
                              "properties": {
                                "cisco-crosswork-isis-topology:system-id": {
                                  "description": "ISIS System ID which is a 6 octet numerical value (leaf)",
                                  "type": "string",
                                  "format": "string"
                                },
                                "cisco-crosswork-isis-topology:area": {
                                  "description": "ISIS Area address. Numerical value of 1 to 13 octets (leaf)",
                                  "type": "string",
                                  "format": "string"
                                }
                              }
                            },
                            "cisco-crosswork-isis-topology:level": {
                              "description": "ISIS level of the link/ adjacency (leaf)",
                              "type": "integer",
                              "format": "byte"
                            }
                          }
                        },
                        "cisco-crosswork-ospf-topology:ospf-link-attributes": {
                          "description": "Containing OSPF link attributes (non-presence)",
                          "type": "object",
                          "properties": {
                            "cisco-crosswork-ospf-topology:ospf-router-id": {
                              "description": "OSPF router ID, which is an IPv4 address,\nof the local host (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "cisco-crosswork-ospf-topology:area-id": {
                              "description": "OSPF area ID, represented as an IPv4 address value (leaf)",
                              "type": "string",
                              "format": "string"
                            }
                          }
                        },
                        "ietf-sr-topology-state:sr": {
                          "description": "Containing SR attributes. (presence)",
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:advertise-protection": {
                              "description": "If set, the Adj-SID refers to an\nadjacency being protected. (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "single",
                              "enum": [
                                "single",
                                "dual"
                              ]
                            },
                            "ietf-sr-topology-state:msd": {
                              "description": "SID depth of the interface associated with the link. (leaf)",
                              "type": "integer",
                              "format": "byte"
                            },
                            "ietf-sr-topology-state:sids": {
                              "type": "array",
                              "description": "List of SIDs. (list)",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ietf-sr-topology-state:value-type": {
                                    "description": "This leaf defines how value must be interpreted. (leaf)",
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "index",
                                    "enum": [
                                      "index",
                                      "absolute"
                                    ]
                                  },
                                  "ietf-sr-topology-state:sid": {
                                    "description": "Adjacency SID, which can be either IGP-Adjacency SID\nor BGP PeerAdj SID, depending on the context. (leaf)",
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "ietf-sr-topology-state:is-local": {
                                    "description": "'true' if the SID is local. (leaf)",
                                    "type": "string",
                                    "format": "boolean"
                                  },
                                  "ietf-sr-topology-state:address-family": {
                                    "description": "This leaf defines the F-Flag (Address-Family flag) of the\nSID. (leaf)",
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "ipv4",
                                    "enum": [
                                      "ipv4",
                                      "ipv6"
                                    ]
                                  },
                                  "ietf-sr-topology-state:is-backup": {
                                    "description": "'true' if the SID is a backup. (leaf)",
                                    "type": "string",
                                    "format": "boolean"
                                  },
                                  "ietf-sr-topology-state:is-part-of-set": {
                                    "description": "'true' if the SID is part of a set. (leaf)",
                                    "type": "string",
                                    "format": "boolean"
                                  },
                                  "ietf-sr-topology-state:is-persistent": {
                                    "description": "'true' if the SID is persistently allocated. (leaf)",
                                    "type": "string",
                                    "format": "boolean"
                                  },
                                  "ietf-sr-topology-state:is-on-lan": {
                                    "description": "'true' if on a lan. (leaf)",
                                    "type": "string",
                                    "format": "boolean"
                                  }
                                }
                              }
                            },
                            "ietf-sr-topology-state:information-source": {
                              "description": "Indicates the type of the information source. (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "unknown",
                              "enum": [
                                "unknown",
                                "locally-configured",
                                "ospfv2",
                                "ospfv3",
                                "isis",
                                "bgp-ls",
                                "system-processed",
                                "other"
                              ]
                            },
                            "ietf-sr-topology-state:information-source-instance": {
                              "description": "The name indicating the instance of the information\nsource. (leaf)",
                              "type": "string",
                              "format": "string"
                            },
                            "ietf-sr-topology-state:information-source-state": {
                              "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:credibility-preference": {
                                  "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                                  "type": "integer",
                                  "format": "uint16"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ietf-l3-unicast-topology-state:l3-topology-attributes": {
                "description": "Contains topology attributes (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-l3-unicast-topology-state:name": {
                    "description": "Name of the topology (leaf)",
                    "type": "string",
                    "format": "string"
                  },
                  "ietf-l3-unicast-topology-state:flag": {
                    "type": "array",
                    "items": {
                      "description": "Topology flags (leaf-list)",
                      "type": "string",
                      "format": "identityref"
                    }
                  },
                  "cisco-crosswork-isis-topology:isis-topology-attributes": {
                    "description": "Contains ISIS topology attributes.\n*** Contains a single Area address, which means each nw:ietf-network\nmust contain a single ISIS Area. is this what we want??\n*** How do we identify areas from different ISIS domains??\n*** What would the behavior be for a query asking for all ietf-networks?? (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-isis-topology:area": {
                        "description": "ISIS Area address. Numerical value of 1 to 13 octets (leaf)",
                        "type": "string",
                        "format": "string"
                      }
                    }
                  },
                  "cisco-crosswork-ospf-topology:ospf-topology-attributes": {
                    "description": "OSPF topology attributes (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-ospf-topology:area-id": {
                        "description": "OSPF area ID, represented as an IPv4 address value.\n*** Contains a single Area ID, which means each ietf-network\nmust contain a single OSPF Area. is this what we want??\n*** How do we identify areas from different OSPF domains?? (leaf)",
                        "type": "string",
                        "format": "string"
                      }
                    }
                  },
                  "ietf-sr-topology-state:sr": {
                    "description": "Containing SR attributes. (non-presence)",
                    "type": "object",
                    "properties": {
                      "ietf-sr-topology-state:srgb": {
                        "type": "array",
                        "description": "List of global blocks to be advertised. (list)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:lower-bound": {
                              "description": "Lower value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            },
                            "ietf-sr-topology-state:upper-bound": {
                              "description": "Upper value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_ietf-network-state_networks_network_network-id_node_node-id": {
      "type": "object",
      "properties": {
        "ietf-network-state:node": {
          "type": "array",
          "description": "The inventory of nodes of this network. (list)",
          "items": {
            "type": "object",
            "properties": {
              "node-id": {
                "description": "Uniquely identifies a node within the containing\nnetwork. (leaf)",
                "type": "string",
                "format": "string"
              },
              "ietf-network-topology-state:termination-point": {
                "type": "array",
                "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface. (list)",
                "items": {
                  "type": "object",
                  "properties": {
                    "ietf-network-topology-state:tp-id": {
                      "description": "Termination point identifier. (leaf)",
                      "type": "string",
                      "format": "string"
                    },
                    "ietf-l3-unicast-topology-state:l3-termination-point-attributes": {
                      "description": "Contains termination point attributes (non-presence)",
                      "type": "object",
                      "properties": {
                        "ietf-l3-unicast-topology-state:ip-address": {
                          "type": "array",
                          "items": {
                            "description": "IPv4 or IPv6 address. (leaf-list)",
                            "type": "string",
                            "format": "union"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ietf-l3-unicast-topology-state:l3-node-attributes": {
                "description": "Contains node attributes (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-l3-unicast-topology-state:name": {
                    "description": "Node name (leaf)",
                    "type": "string",
                    "format": "string"
                  },
                  "ietf-l3-unicast-topology-state:flag": {
                    "type": "array",
                    "items": {
                      "description": "Node flags (leaf-list)",
                      "type": "string",
                      "format": "identityref"
                    }
                  },
                  "ietf-l3-unicast-topology-state:router-id": {
                    "type": "array",
                    "items": {
                      "description": "Router-id for the node (leaf-list)",
                      "type": "string",
                      "format": "string"
                    }
                  },
                  "ietf-l3-unicast-topology-state:prefix": {
                    "type": "array",
                    "description": "A list of prefixes along with their attributes (list)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ietf-l3-unicast-topology-state:prefix": {
                          "description": "IP prefix value (leaf)",
                          "type": "string",
                          "format": "union"
                        },
                        "ietf-l3-unicast-topology-state:metric": {
                          "description": "Prefix metric (leaf)",
                          "type": "integer",
                          "format": "uint32"
                        },
                        "ietf-l3-unicast-topology-state:flag": {
                          "type": "array",
                          "items": {
                            "description": "Prefix flags (leaf-list)",
                            "type": "string",
                            "format": "identityref"
                          }
                        },
                        "ietf-sr-topology-state:sr": {
                          "description": "Containing SR attributes for a prefix. (presence)",
                          "type": "array",
                          "items": {
                            "description": "sr-mpls attributes list (leaf-list)",
                            "type": "object",
                            "properties": {
                              "ietf-sr-topology-state:value-type": {
                                "description": "This leaf defines how value must be interpreted. (leaf)",
                                "type": "string",
                                "format": "enumeration",
                                "default": "index",
                                "enum": [
                                  "index",
                                  "absolute"
                                ]
                              },
                              "ietf-sr-topology-state:start-sid": {
                                "description": "Value associated with prefix. The value must be\ninterpreted in the context of value-type. (leaf)",
                                "type": "integer",
                                "format": "uint32"
                              },
                              "ietf-sr-topology-state:range": {
                                "description": "Indicates how many SIDs can be allocated. (leaf)",
                                "type": "integer",
                                "format": "uint32"
                              },
                              "ietf-sr-topology-state:algorithm": {
                                "description": "Prefix-sid algorithm. (leaf)",
                                "type": "string",
                                "format": "identityref"
                              },
                              "ietf-sr-topology-state:last-hop-behavior": {
                                "description": "Configure last hop behavior. (leaf)",
                                "type": "string",
                                "format": "enumeration",
                                "default": "explicit-null",
                                "enum": [
                                  "explicit-null",
                                  "no-php",
                                  "php"
                                ]
                              },
                              "ietf-sr-topology-state:is-local": {
                                "description": "'true' if the SID is local. (leaf)",
                                "type": "string",
                                "format": "boolean"
                              },
                              "ietf-sr-topology-state:is-node": {
                                "description": "'true' if the Prefix-SID refers to the router identified\n by the prefix.  Typically, the leaf 'is-node' (N-Flag)\n is set on Prefix-SIDs attached to a router loopback\n address. (leaf)",
                                "type": "string",
                                "format": "boolean"
                              },
                              "ietf-sr-topology-state:is-readvertisment": {
                                "description": "'true' if the prefix to which this Prefix-SID is attached,\n has been propagated by the router from another\n topology by redistribution. (leaf)",
                                "type": "string",
                                "format": "boolean"
                              }
                            }
                          }

                        }
                      }
                    }
                  },
                  "cisco-crosswork-isis-topology:isis-node-attributes": {
                    "description": "ISIS attributes for a specific node (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-isis-topology:system-id": {
                        "description": "ISIS System ID, a 6 octet numerical value (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "cisco-crosswork-isis-topology:area": {
                        "type": "array",
                        "items": {
                          "description": "List of Area addresses.\n*** Should we return only a single Area address corresponding\nto the current network?? (leaf-list)",
                          "type": "string",
                          "format": "string"
                        }
                      },
                      "cisco-crosswork-isis-topology:level": {
                        "description": "Level 1, Level 2 or Level 1 & 2 (leaf)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "level-1",
                        "enum": [
                          "level-1",
                          "level-2",
                          "level-all"
                        ]
                      }
                    }
                  },
                  "cisco-crosswork-ospf-topology:ospf-node-attributes": {
                    "description": "Contains node's OSPF attributes (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-ospf-topology:ospf-router-id": {
                        "description": "OSPF router ID, which is an IPv4 address.\n*** Note, only one router-ID is reported, corresponwing\nto the IGP domain of the current network (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "cisco-crosswork-ospf-topology:area-id": {
                        "type": "array",
                        "items": {
                          "description": "List of OSPF area IDs, each represented as an IPv4 address value\n*** Should we report all Areas or just the one corresponwing to\nthe network?? (leaf-list)",
                          "type": "string",
                          "format": "string"
                        }
                      }
                    }
                  },
                  "ietf-sr-topology-state:sr": {
                    "description": "Containing SR attributes. (non-presence)",
                    "type": "object",
                    "properties": {
                      "ietf-sr-topology-state:srgb": {
                        "type": "array",
                        "description": "List of global blocks to be advertised. (list)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:lower-bound": {
                              "description": "Lower value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            },
                            "ietf-sr-topology-state:upper-bound": {
                              "description": "Upper value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            }
                          }
                        }
                      },
                      "ietf-sr-topology-state:srlb": {
                        "type": "array",
                        "description": "List of SRLBs. (list)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:lower-bound": {
                              "description": "Lower value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            },
                            "ietf-sr-topology-state:upper-bound": {
                              "description": "Upper value in the label range. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            }
                          }
                        }
                      },
                      "ietf-sr-topology-state:node-capabilities": {
                        "description": "Shows the SR capability of the node. (non-presence)",
                        "type": "object",
                        "properties": {
                          "ietf-sr-topology-state:transport-planes": {
                            "type": "array",
                            "description": "List of supported transport planes. (list)",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ietf-sr-topology-state:transport-plane": {
                                  "description": "Transport plane supported (leaf)",
                                  "type": "string",
                                  "format": "identityref"
                                }
                              }
                            }
                          },
                          "ietf-sr-topology-state:entropy-readable-label-depth": {
                            "description": "Maximum label stack depth that a router can read. (leaf)",
                            "type": "integer",
                            "format": "byte"
                          }
                        }
                      },
                      "ietf-sr-topology-state:msd": {
                        "description": "Node MSD is the lowest MSD supported by the node. (leaf)",
                        "type": "integer",
                        "format": "byte"
                      },
                      "ietf-sr-topology-state:information-source": {
                        "description": "Indicates the type of the information source. (leaf)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "unknown",
                        "enum": [
                          "unknown",
                          "locally-configured",
                          "ospfv2",
                          "ospfv3",
                          "isis",
                          "bgp-ls",
                          "system-processed",
                          "other"
                        ]
                      },
                      "ietf-sr-topology-state:information-source-instance": {
                        "description": "The name indicating the instance of the information\nsource. (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "ietf-sr-topology-state:information-source-state": {
                        "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                        "type": "object",
                        "properties": {
                          "ietf-sr-topology-state:credibility-preference": {
                            "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                            "type": "integer",
                            "format": "uint16"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_ietf-network-state_networks_network_network-id_node_node-id_ietf-network-topology-state_termination-point_termination-point-id": {
      "type": "object",
      "properties": {
        "ietf-network-topology-state:termination-point": {
          "type": "array",
          "description": "A termination point can terminate a link.\nDepending on the type of topology, a termination point\ncould, for example, refer to a port or an interface. (list)",
          "items": {
            "type": "object",
            "properties": {
              "ietf-network-topology-state:tp-id": {
                "description": "Termination point identifier. (leaf)",
                "type": "string",
                "format": "string"
              },
              "ietf-l3-unicast-topology-state:l3-termination-point-attributes": {
                "description": "Contains termination point attributes (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-l3-unicast-topology-state:ip-address": {
                    "type": "array",
                    "items": {
                      "description": "IPv4 or IPv6 address. (leaf-list)",
                      "type": "string",
                      "format": "union"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_ietf-network-state_networks_network_network-id_ietf-network-topology-state_link_link-id": {
      "type": "object",
      "properties": {
        "ietf-network-topology-state:link": {
          "type": "array",
          "description": "A network link connects a local (source) node and\na remote (destination) node via a set of the respective\nnode's termination points.  It is possible to have several\nlinks between the same source and destination nodes.\nLikewise, a link could potentially be re-homed between\ntermination points.  Therefore, in order to ensure that we\nwould always know to distinguish between links, every link\nis identified by a dedicated link identifier.  Note that a\nlink models a point-to-point link, not a multipoint link. (list)",
          "items": {
            "type": "object",
            "properties": {
              "ietf-network-topology-state:source": {
                "description": "This container holds the logical source of a particular\nlink. (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-network-topology-state:source-node": {
                    "description": "Source node identifier.  Must be in the same topology. (leaf)",
                    "type": "string",
                    "format": "leafref"
                  },
                  "ietf-network-topology-state:source-tp": {
                    "description": "This termination point is located within the source node\nand terminates the link. (leaf)",
                    "type": "string",
                    "format": "leafref"
                  }
                }
              },
              "ietf-network-topology-state:destination": {
                "description": "This container holds the logical destination of a\nparticular link. (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-network-topology-state:dest-node": {
                    "description": "Destination node identifier.  Must be in the same\nnetwork. (leaf)",
                    "type": "string",
                    "format": "leafref"
                  },
                  "ietf-network-topology-state:dest-tp": {
                    "description": "This termination point is located within the\ndestination node and terminates the link. (leaf)",
                    "type": "string",
                    "format": "leafref"
                  }
                }
              },
              "ietf-network-topology-state:link-id": {
                "description": "The identifier of a link in the topology.\nA link is specific to a topology to which it belongs. (leaf)",
                "type": "string",
                "format": "string"
              },
              "ietf-l3-unicast-topology-state:l3-link-attributes": {
                "description": "Contains link attributes (non-presence)",
                "type": "object",
                "properties": {
                  "ietf-l3-unicast-topology-state:name": {
                    "description": "Link Name (leaf)",
                    "type": "string",
                    "format": "string"
                  },
                  "ietf-l3-unicast-topology-state:flag": {
                    "type": "array",
                    "items": {
                      "description": "Link flags (leaf-list)",
                      "type": "string",
                      "format": "identityref"
                    }
                  },
                  "ietf-l3-unicast-topology-state:metric1": {
                    "description": "Link Metric 1 for reporting IGP metric value (leaf)",
                    "type": "integer",
                    "format": "uint64"
                  },
                  "ietf-l3-unicast-topology-state:metric2": {
                    "description": "Link Metric 2 for reporting TE metric value (leaf)",
                    "type": "integer",
                    "format": "uint64"
                  },
                  "cisco-crosswork-isis-topology:isis-link-attributes": {
                    "description": "ISIS link/ adjacency attributes (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-isis-topology:net": {
                        "description": "ISIS Network Entity Title which identifies an instance of ISIS (non-presence)",
                        "type": "object",
                        "properties": {
                          "cisco-crosswork-isis-topology:system-id": {
                            "description": "ISIS System ID which is a 6 octet numerical value (leaf)",
                            "type": "string",
                            "format": "string"
                          },
                          "cisco-crosswork-isis-topology:area": {
                            "description": "ISIS Area address. Numerical value of 1 to 13 octets (leaf)",
                            "type": "string",
                            "format": "string"
                          }
                        }
                      },
                      "cisco-crosswork-isis-topology:level": {
                        "description": "ISIS level of the link/ adjacency (leaf)",
                        "type": "integer",
                        "format": "byte"
                      }
                    }
                  },
                  "cisco-crosswork-ospf-topology:ospf-link-attributes": {
                    "description": "Containing OSPF link attributes (non-presence)",
                    "type": "object",
                    "properties": {
                      "cisco-crosswork-ospf-topology:ospf-router-id": {
                        "description": "OSPF router ID, which is an IPv4 address,\nof the local host (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "cisco-crosswork-ospf-topology:area-id": {
                        "description": "OSPF area ID, represented as an IPv4 address value (leaf)",
                        "type": "string",
                        "format": "string"
                      }
                    }
                  },
                  "ietf-sr-topology-state:sr": {
                    "description": "Containing SR attributes. (presence)",
                    "type": "object",
                    "properties": {
                      "ietf-sr-topology-state:advertise-protection": {
                        "description": "If set, the Adj-SID refers to an\nadjacency being protected. (leaf)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "single",
                        "enum": [
                          "single",
                          "dual"
                        ]
                      },
                      "ietf-sr-topology-state:msd": {
                        "description": "SID depth of the interface associated with the link. (leaf)",
                        "type": "integer",
                        "format": "byte"
                      },
                      "ietf-sr-topology-state:sids": {
                        "type": "array",
                        "description": "List of SIDs. (list)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ietf-sr-topology-state:value-type": {
                              "description": "This leaf defines how value must be interpreted. (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "index",
                              "enum": [
                                "index",
                                "absolute"
                              ]
                            },
                            "ietf-sr-topology-state:sid": {
                              "description": "Adjacency SID, which can be either IGP-Adjacency SID\nor BGP PeerAdj SID, depending on the context. (leaf)",
                              "type": "integer",
                              "format": "uint32"
                            },
                            "ietf-sr-topology-state:is-local": {
                              "description": "'true' if the SID is local. (leaf)",
                              "type": "string",
                              "format": "boolean"
                            },
                            "ietf-sr-topology-state:address-family": {
                              "description": "This leaf defines the F-Flag (Address-Family flag) of the\nSID. (leaf)",
                              "type": "string",
                              "format": "enumeration",
                              "default": "ipv4",
                              "enum": [
                                "ipv4",
                                "ipv6"
                              ]
                            },
                            "ietf-sr-topology-state:is-backup": {
                              "description": "'true' if the SID is a backup. (leaf)",
                              "type": "string",
                              "format": "boolean"
                            },
                            "ietf-sr-topology-state:is-part-of-set": {
                              "description": "'true' if the SID is part of a set. (leaf)",
                              "type": "string",
                              "format": "boolean"
                            },
                            "ietf-sr-topology-state:is-persistent": {
                              "description": "'true' if the SID is persistently allocated. (leaf)",
                              "type": "string",
                              "format": "boolean"
                            },
                            "ietf-sr-topology-state:is-on-lan": {
                              "description": "'true' if on a lan. (leaf)",
                              "type": "string",
                              "format": "boolean"
                            }
                          }
                        }
                      },

                      "ietf-sr-topology-state:information-source": {
                        "description": "Indicates the type of the information source. (leaf)",
                        "type": "string",
                        "format": "enumeration",
                        "default": "unknown",
                        "enum": [
                          "unknown",
                          "locally-configured",
                          "ospfv2",
                          "ospfv3",
                          "isis",
                          "bgp-ls",
                          "system-processed",
                          "other"
                        ]
                      },
                      "ietf-sr-topology-state:information-source-instance": {
                        "description": "The name indicating the instance of the information\nsource. (leaf)",
                        "type": "string",
                        "format": "string"
                      },
                      "ietf-sr-topology-state:information-source-state": {
                        "description": "The container contains state attributes related to\nthe information source. (non-presence)",
                        "type": "object",
                        "properties": {
                          "ietf-sr-topology-state:credibility-preference": {
                            "description": "The preference value to calculate the traffic\nengineering database credibility value used for\ntie-break selection between different\ninformation-source values.\nHigher value is more preferable. (leaf)",
                            "type": "integer",
                            "format": "uint16"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

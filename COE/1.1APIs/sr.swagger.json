{
  "swagger": "2.0",
  "info": {
    "title": "cisco-crosswork-segment-routing-policy",
    "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
    "version": "2019-10-20"
  },
  "basePath": "/crosswork/nbi/optima/v1/restconf",
  "tags": [
    {
      "name": "root",
      "description": "root resources"
    },
    {
      "name": "operations",
      "description": "operations resources"
    },
    {
      "name": "data",
      "description": "data resources"
    },
    {
      "name": "get",
      "description": "get resources"
    },
    {
      "name": "post",
      "description": "post resources"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "produces": [
    "application/yang-data+json"
  ],
  "consumes": [
    "application/yang-data+json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "root",
          "get"
        ],
        "summary": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "operationId": "root_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
            "schema": {
              "$ref": "#/definitions/root"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations": {
      "get": {
        "tags": [
          "operations",
          "get"
        ],
        "summary": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "operationId": "operations_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
            "schema": {
              "$ref": "#/definitions/operations"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/yang-library-version": {
      "get": {
        "tags": [
          "yang-library-version",
          "get"
        ],
        "summary": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "operationId": "yang_library_version_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
            "schema": {
              "$ref": "#/definitions/yang-library-version"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "operationId": "data_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
            "schema": {
              "$ref": "#/definitions/data"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
        "operationId": "data_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data-post"
          }
        ],
        "responses": {
          "201": {
            "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Container of MPLS Segment Routing Policies",
        "description": "Container of MPLS Segment Routing Policies",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Container of MPLS Segment Routing Policies",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/headend": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Policy head end IP address",
        "description": "Policy head end IP address",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_headend_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy head end IP address",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_headend"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/endpoint": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Policy end point IP address",
        "description": "Policy end point IP address",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_endpoint_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy end point IP address",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_endpoint"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/color": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Color associated with the policy",
        "description": "Color associated with the policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_color_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Color associated with the policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_color"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/description": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Policy description",
        "description": "Policy description",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_description_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy description",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_description"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/admin-state": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Administrative state of the policy",
        "description": "Administrative state of the policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_admin_state_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Administrative state of the policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_admin-state"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/oper-state": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Operational state of the policy",
        "description": "Operational state of the policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_oper_state_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Operational state of the policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_oper-state"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/sr-policy-type": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "The Crosswork SR Policy type for this policy",
        "description": "The Crosswork SR Policy type for this policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_sr_policy_type_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "The Crosswork SR Policy type for this policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_sr-policy-type"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "SR Policy details",
        "description": "SR Policy details",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "SR Policy details",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/binding-sid": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Binding SID assigned to the policy\n*** Or is BSID associated with a path?",
        "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path?",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_binding_sid_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path?",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_binding-sid"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/msd": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property?",
        "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property?",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_msd_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property?",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_msd"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pce-controlled": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "If true, policy can be re-optimized by PCE",
        "description": "If true, policy can be re-optimized by PCE",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pce_controlled_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "If true, policy can be re-optimized by PCE",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pce-controlled"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/delegated-pce": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "IPv4 or IPv6 address of the delegated PCE",
        "description": "IPv4 or IPv6 address of the delegated PCE",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_delegated_pce_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "IPv4 or IPv6 address of the delegated PCE",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_delegated-pce"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/sub-delegated-pce": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "IPv4 or IPv6 address of the sub-delegated PCE",
        "description": "IPv4 or IPv6 address of the sub-delegated PCE",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_sub_delegated_pce_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "IPv4 or IPv6 address of the sub-delegated PCE",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_sub-delegated-pce"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcc-address": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "IPv4 or IPv6 address of PCC (Path Compute Client)",
        "description": "IPv4 or IPv6 address of PCC (Path Compute Client)",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcc_address_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "IPv4 or IPv6 address of PCC (Path Compute Client)",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcc-address"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP connection details",
        "description": "PCEP connection details",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP connection details",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-id": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCE protocol identifier",
        "description": "PCE protocol identifier",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCE protocol identifier",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-d": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP delegation flag",
        "description": "PCEP LSP delegation flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_d_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP delegation flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-d"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-s": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP state-sync flag",
        "description": "PCEP LSP state-sync flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_s_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP state-sync flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-s"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-r": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP remove flag",
        "description": "PCEP LSP remove flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_r_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP remove flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-r"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-a": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP admin flag",
        "description": "PCEP LSP admin flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_a_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP admin flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-a"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-o": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP operation flag",
        "description": "PCEP LSP operation flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_o_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP operation flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-o"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/pcep-info/pcep-flag-c": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "PCEP LSP initiated flag",
        "description": "PCEP LSP initiated flag",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_pcep_info_pcep_flag_c_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "PCEP LSP initiated flag",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-c"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "List of paths associated with the policy",
        "description": "List of paths associated with the policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paths associated with the policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "List of paths associated with the policy",
        "description": "List of paths associated with the policy",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paths associated with the policy",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path_"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/path-name": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path?",
        "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path?",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__path_name_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path?",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__path-name"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/path-type": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Path type (explicit or dynamic)",
        "description": "Path type (explicit or dynamic)",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__path_type_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Path type (explicit or dynamic)",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__path-type"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/preference": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Configured Preference for this path",
        "description": "Configured Preference for this path",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__preference_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Configured Preference for this path",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__preference"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/optimization-metric": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__optimization_metric_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/optimization-metric/metric-type": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Metric type to optimize for this path",
        "description": "Metric type to optimize for this path",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__optimization_metric_metric_type_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Metric type to optimize for this path",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric_metric-type"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/optimization-metric/metric-value": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Cumulative metric value for the path",
        "description": "Cumulative metric value for the path",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__optimization_metric_metric_value_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Cumulative metric value for the path",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric_metric-value"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/affinity": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Affinity information",
        "description": "Affinity information",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_affinity_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Affinity information",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/affinity/exclude-any": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Exclude-any attribute flags",
        "description": "Exclude-any attribute flags",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_affinity_exclude_any_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Exclude-any attribute flags",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_exclude-any"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/affinity/include-any": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Include-any attribute flags",
        "description": "Include-any attribute flags",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_affinity_include_any_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Include-any attribute flags",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_include-any"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/affinity/include-all": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Include-all attribute flags",
        "description": "Include-all attribute flags",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_affinity_include_all_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Include-all attribute flags",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_include-all"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/association-info": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Association (Disjoint Group) information",
        "description": "Association (Disjoint Group) information",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_association_info_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Association (Disjoint Group) information",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/association-info/assoc-source": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Association Source",
        "description": "Association Source",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_association_info_assoc_source_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Association Source",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-source"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/association-info/assoc-type": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Association Type",
        "description": "Association Type",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_association_info_assoc_type_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Association Type",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-type"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/association-info/assoc-id": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Association ID (Disjoint Group ID)",
        "description": "Association ID (Disjoint Group ID)",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_association_info_assoc_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Association ID (Disjoint Group ID)",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/bandwidth-mbps": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Requested bandwidth in mega-bits-per-sec",
        "description": "Requested bandwidth in mega-bits-per-sec",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_bandwidth_mbps_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested bandwidth in mega-bits-per-sec",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_bandwidth-mbps"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/constraints/unprotected-only-flag": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred",
        "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__constraints_unprotected_only_flag_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_unprotected-only-flag"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/computed-time": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Time stamp when the path was computed",
        "description": "Time stamp when the path was computed",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__computed_time_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Time stamp when the path was computed",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__computed-time"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/profile-id": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Associates this path with a forwarding profile on the router/ device",
        "description": "Associates this path with a forwarding profile on the router/ device",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__profile_id_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Associates this path with a forwarding profile on the router/ device",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__profile-id"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Segment/ Hop list for this path",
        "description": "Segment/ Hop list for this path",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Segment/ Hop list for this path",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Segment/ Hop list for this path",
        "description": "Segment/ Hop list for this path",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Segment/ Hop list for this path",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop_"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=/type": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "SID type",
        "description": "SID type",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__type_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "SID type",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__type"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=/label": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "MPLS label (20 bits)",
        "description": "MPLS label (20 bits)",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__label_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "MPLS label (20 bits)",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__label"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=/local-ip-addr": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface",
        "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__local_ip_addr_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__local-ip-addr"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=/remote-ip-addr": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a",
        "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__remote_ip_addr_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__remote-ip-addr"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policies/policy={policy-headend},{policy-endpoint},{policy-color}/policy-details/path=/hop=/protected-flag": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "If true, the SID is protected",
        "description": "If true, the SID is protected",
        "operationId": "data_cisco_crosswork_segment_routing_policy_sr_policies_policy_policy_headend_policy_endpoint_policy_color_policy_details_path__hop__protected_flag_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/policy-headend"
          },
          {
            "$ref": "#/parameters/policy-endpoint"
          },
          {
            "$ref": "#/parameters/policy-color"
          },
          {
            "$ref": "#/parameters/content"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/with-defaults"
          }
        ],
        "responses": {
          "200": {
            "description": "If true, the SID is protected",
            "schema": {
              "$ref": "#/definitions/data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__protected-flag"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event/policy-headend-ref": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event/policy-endpoint-ref": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event/policy-color-ref": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event/new-oper-state": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-oper-state-change-event/admin-state": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/change-type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/headend": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/endpoint": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/color": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/description": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/admin-state": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/oper-state": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/sr-policy-type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/binding-sid": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/msd": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pce-controlled": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/delegated-pce": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/sub-delegated-pce": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcc-address": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-id": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-d": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-s": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-r": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-a": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-o": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/pcep-info/pcep-flag-c": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/path-name": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/path-type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/preference": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/optimization-metric": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/optimization-metric/metric-type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/optimization-metric/metric-value": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/affinity": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/affinity/exclude-any": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/affinity/include-any": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/affinity/include-all": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/association-info": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/association-info/assoc-source": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/association-info/assoc-type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/association-info/assoc-id": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/bandwidth-mbps": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/constraints/unprotected-only-flag": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/computed-time": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/profile-id": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop=/type": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop=/label": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop=/local-ip-addr": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop=/remote-ip-addr": {
    },
    "/data/cisco-crosswork-segment-routing-policy:sr-policy-change-event/policy/policy-details/path=/hop=/protected-flag": {
    }
  },
  "parameters": {
    "content": {
      "name": "content",
      "in": "query",
      "description": "controlling descendant nodes in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "config",
      "enum": [
        "config",
        "nonconfig",
        "all"
      ]
    },
    "depth": {
      "name": "depth",
      "in": "query",
      "description": "limit the depth of nodes in response",
      "required": false,
      "type": "integer",
      "format": "uint16"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "optionally identify specific data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "filter": {
      "name": "filter",
      "in": "query",
      "description": "xpath expression to filter data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "with-defaults": {
      "name": "with-defaults",
      "in": "query",
      "description": "controlling default values in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "report-all",
      "enum": [
        "report-all",
        "trim",
        "explicit",
        "report-all-tagged"
      ]
    },
    "insert": {
      "name": "insert",
      "in": "query",
      "description": "controlling the order when adding new list elements",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "first",
      "enum": [
        "first",
        "last",
        "before",
        "after"
      ]
    },
    "point": {
      "name": "point",
      "in": "query",
      "description": "used to specify the insertion point",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "policy-headend": {
      "name": "policy-headend",
      "in": "path",
      "description": "Policy head end IP address",
      "required": true,
      "type": "string",
      "format": "union"
    },
    "policy-endpoint": {
      "name": "policy-endpoint",
      "in": "path",
      "description": "Policy end point IP address",
      "required": true,
      "type": "string",
      "format": "union"
    },
    "policy-color": {
      "name": "policy-color",
      "in": "path",
      "description": "Color associated with the policy",
      "required": true,
      "type": "integer",
      "format": "uint32"
    },
    "data-post": {
      "name": "data",
      "in": "body",
      "description": "This module defines a Data Model for reporting operational state of\n Segment Routing Policies.\n\nCopyright (c) 2019 by Cisco Systems, Inc.\nAll rights reserved.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data-post"
      }
    }
  },
  "responses": {
    "200": {
      "description": "OK"
    },
    "201": {
      "description": "Created"
    },
    "204": {
      "description": "No Content"
    },
    "400": {
      "description": "Bad Request"
    },
    "401": {
      "description": "Unauthorized"
    },
    "404": {
      "description": "Not Found"
    },
    "405": {
      "description": "Method Not Allowed"
    },
    "409": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "yang-library-version": {
      "type": "object",
      "properties": {
        "ietf-restconf:yang-library-version": {
          "type": "object",
          "description": "This leaf identifies the revision date of the 'ietf-yang-library' YANG module that is implemented by this server. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "leaf"
          },
          "properties": {
          }
        }
      }
    },
    "root": {
      "type": "object",
      "properties": {
        "ietf-restconf:restconf": {
          "type": "object",
          "x-yang": {
            "type": "root"
          },
          "description": "This is the RESTCONF root resource for the RESTCONF datastore and operation resources. See RESTCONF RFC 8040 for further information.",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
              }
            },
            "operations": {
              "type": "object",
              "properties": {
              }
            },
            "yang-library-version": {
              "type": "string"
            }
          }
        }
      }
    },
    "operations": {
      "type": "object",
      "properties": {
        "ietf-restconf:operations": {
          "type": "object",
          "x-yang": {
            "type": "operations"
          },
          "description": "This resource is a container that provides access to the data-model-specific RPC operations supported by the server. See RESTCONF RFC 8040 for further information.",
          "properties": {

          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_sr-policy-type": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:sr-policy-type": {
          "description": "The Crosswork SR Policy type for this policy (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "CW-CONFIGURED",
          "enum": [
            "CW-CONFIGURED",
            "CW-CONFIGURED-BW",
            "CW-TACTICAL-TE",
            "OTHER"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_sub-delegated-pce": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:sub-delegated-pce": {
          "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-id": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-id": {
          "description": "PCE protocol identifier (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-s": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-s": {
          "description": "PCEP LSP state-sync flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-r": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-r": {
          "description": "PCEP LSP remove flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-o": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-o": {
          "description": "PCEP LSP operation flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "byte"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-d": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-d": {
          "description": "PCEP LSP delegation flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-c": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-c": {
          "description": "PCEP LSP initiated flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "byte"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info_pcep-flag-a": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-flag-a": {
          "description": "PCEP LSP admin flag (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcep-info": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcep-info": {
          "description": "PCEP connection details (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "pcep-id": {
              "description": "PCE protocol identifier (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "pcep-flag-d": {
              "description": "PCEP LSP delegation flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            },
            "pcep-flag-s": {
              "description": "PCEP LSP state-sync flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            },
            "pcep-flag-r": {
              "description": "PCEP LSP remove flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            },
            "pcep-flag-a": {
              "description": "PCEP LSP admin flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            },
            "pcep-flag-o": {
              "description": "PCEP LSP operation flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "byte"
            },
            "pcep-flag-c": {
              "description": "PCEP LSP initiated flag (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "byte"
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pce-controlled": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pce-controlled": {
          "description": "If true, policy can be re-optimized by PCE (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_pcc-address": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:pcc-address": {
          "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__profile-id": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:profile-id": {
          "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__preference": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:preference": {
          "description": "Configured Preference for this path (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint16"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__path-type": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:path-type": {
          "description": "Path type (explicit or dynamic) (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "PT-UNKNOWN",
          "enum": [
            "PT-UNKNOWN",
            "PT-EXPLICIT",
            "PT-DYNAMIC"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__path-name": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:path-name": {
          "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric_metric-value": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:metric-value": {
          "description": "Cumulative metric value for the path (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric_metric-type": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:metric-type": {
          "description": "Metric type to optimize for this path (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "IGP-METRIC",
          "enum": [
            "IGP-METRIC",
            "TE-METRIC",
            "DELAY",
            "HOP-COUNT"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__optimization-metric": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:optimization-metric": {
          "description": "(non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "metric-type": {
              "description": "Metric type to optimize for this path (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "IGP-METRIC",
              "enum": [
                "IGP-METRIC",
                "TE-METRIC",
                "DELAY",
                "HOP-COUNT"
              ]
            },
            "metric-value": {
              "description": "Cumulative metric value for the path (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__type": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:type": {
          "description": "SID type (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "IPV4-NODE-SID",
          "enum": [
            "IPV4-NODE-SID",
            "IPV4-ADJ-SID",
            "IPV6-NODE-SID",
            "IPV6-ADJ-SID"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__remote-ip-addr": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:remote-ip-addr": {
          "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__protected-flag": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:protected-flag": {
          "description": "If true, the SID is protected (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__local-ip-addr": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:local-ip-addr": {
          "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop__label": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:label": {
          "description": "MPLS label (20 bits) (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop_": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:hop": {
          "type": "array",
          "description": "Segment/ Hop list for this path (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "SID type (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "IPV4-NODE-SID",
                "enum": [
                  "IPV4-NODE-SID",
                  "IPV4-ADJ-SID",
                  "IPV6-NODE-SID",
                  "IPV6-ADJ-SID"
                ]
              },
              "label": {
                "description": "MPLS label (20 bits) (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "local-ip-addr": {
                "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "remote-ip-addr": {
                "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "protected-flag": {
                "description": "If true, the SID is protected (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "boolean"
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__hop": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:hop": {
          "type": "array",
          "description": "Segment/ Hop list for this path (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "SID type (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "IPV4-NODE-SID",
                "enum": [
                  "IPV4-NODE-SID",
                  "IPV4-ADJ-SID",
                  "IPV6-NODE-SID",
                  "IPV6-ADJ-SID"
                ]
              },
              "label": {
                "description": "MPLS label (20 bits) (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "local-ip-addr": {
                "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "remote-ip-addr": {
                "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "protected-flag": {
                "description": "If true, the SID is protected (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "boolean"
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_unprotected-only-flag": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:unprotected-only-flag": {
          "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "boolean"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_bandwidth-mbps": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:bandwidth-mbps": {
          "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-type": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:assoc-type": {
          "description": "Association Type (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "LINK-DISJOINTNESS",
          "enum": [
            "LINK-DISJOINTNESS",
            "NODE-DISJOINTNESS",
            "SRLG-DISJOINTNESS",
            "SRLG-NODE-DISJOINTNESS"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-source": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:assoc-source": {
          "description": "Association Source (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info_assoc-id": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:assoc-id": {
          "description": "Association ID (Disjoint Group ID) (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_association-info": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:association-info": {
          "description": "Association (Disjoint Group) information (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "assoc-source": {
              "description": "Association Source (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "union"
            },
            "assoc-type": {
              "description": "Association Type (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "enumeration",
              "default": "LINK-DISJOINTNESS",
              "enum": [
                "LINK-DISJOINTNESS",
                "NODE-DISJOINTNESS",
                "SRLG-DISJOINTNESS",
                "SRLG-NODE-DISJOINTNESS"
              ]
            },
            "assoc-id": {
              "description": "Association ID (Disjoint Group ID) (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_include-any": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:include-any": {
          "description": "Include-any attribute flags (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_include-all": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:include-all": {
          "description": "Include-all attribute flags (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity_exclude-any": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:exclude-any": {
          "description": "Exclude-any attribute flags (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints_affinity": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:affinity": {
          "description": "Affinity information (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "exclude-any": {
              "description": "Exclude-any attribute flags (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "include-any": {
              "description": "Include-any attribute flags (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "include-all": {
              "description": "Include-all attribute flags (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__constraints": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:constraints": {
          "description": "(non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "affinity": {
              "description": "Affinity information (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "exclude-any": {
                  "description": "Exclude-any attribute flags (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                },
                "include-any": {
                  "description": "Include-any attribute flags (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                },
                "include-all": {
                  "description": "Include-all attribute flags (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                }
              }
            },
            "association-info": {
              "description": "Association (Disjoint Group) information (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "assoc-source": {
                  "description": "Association Source (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "union"
                },
                "assoc-type": {
                  "description": "Association Type (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "LINK-DISJOINTNESS",
                  "enum": [
                    "LINK-DISJOINTNESS",
                    "NODE-DISJOINTNESS",
                    "SRLG-DISJOINTNESS",
                    "SRLG-NODE-DISJOINTNESS"
                  ]
                },
                "assoc-id": {
                  "description": "Association ID (Disjoint Group ID) (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                }
              }
            },
            "bandwidth-mbps": {
              "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint64"
            },
            "unprotected-only-flag": {
              "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path__computed-time": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:computed-time": {
          "description": "Time stamp when the path was computed (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path_": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:path": {
          "type": "array",
          "description": "List of paths associated with the policy (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "path-name": {
                "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "path-type": {
                "description": "Path type (explicit or dynamic) (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "PT-UNKNOWN",
                "enum": [
                  "PT-UNKNOWN",
                  "PT-EXPLICIT",
                  "PT-DYNAMIC"
                ]
              },
              "preference": {
                "description": "Configured Preference for this path (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint16"
              },
              "optimization-metric": {
                "description": "(non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "metric-type": {
                    "description": "Metric type to optimize for this path (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "IGP-METRIC",
                    "enum": [
                      "IGP-METRIC",
                      "TE-METRIC",
                      "DELAY",
                      "HOP-COUNT"
                    ]
                  },
                  "metric-value": {
                    "description": "Cumulative metric value for the path (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  }
                }
              },
              "constraints": {
                "description": "(non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "affinity": {
                    "description": "Affinity information (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "exclude-any": {
                        "description": "Exclude-any attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "include-any": {
                        "description": "Include-any attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "include-all": {
                        "description": "Include-all attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      }
                    }
                  },
                  "association-info": {
                    "description": "Association (Disjoint Group) information (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "assoc-source": {
                        "description": "Association Source (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "assoc-type": {
                        "description": "Association Type (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "enumeration",
                        "default": "LINK-DISJOINTNESS",
                        "enum": [
                          "LINK-DISJOINTNESS",
                          "NODE-DISJOINTNESS",
                          "SRLG-DISJOINTNESS",
                          "SRLG-NODE-DISJOINTNESS"
                        ]
                      },
                      "assoc-id": {
                        "description": "Association ID (Disjoint Group ID) (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      }
                    }
                  },
                  "bandwidth-mbps": {
                    "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint64"
                  },
                  "unprotected-only-flag": {
                    "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "boolean"
                  }
                }
              },
              "computed-time": {
                "description": "Time stamp when the path was computed (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint64"
              },
              "profile-id": {
                "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "hop": {
                "type": "array",
                "description": "Segment/ Hop list for this path (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "SID type (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "IPV4-NODE-SID",
                      "enum": [
                        "IPV4-NODE-SID",
                        "IPV4-ADJ-SID",
                        "IPV6-NODE-SID",
                        "IPV6-ADJ-SID"
                      ]
                    },
                    "label": {
                      "description": "MPLS label (20 bits) (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "local-ip-addr": {
                      "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "union"
                    },
                    "remote-ip-addr": {
                      "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "union"
                    },
                    "protected-flag": {
                      "description": "If true, the SID is protected (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_path": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:path": {
          "type": "array",
          "description": "List of paths associated with the policy (list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "path-name": {
                "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "path-type": {
                "description": "Path type (explicit or dynamic) (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "PT-UNKNOWN",
                "enum": [
                  "PT-UNKNOWN",
                  "PT-EXPLICIT",
                  "PT-DYNAMIC"
                ]
              },
              "preference": {
                "description": "Configured Preference for this path (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint16"
              },
              "optimization-metric": {
                "description": "(non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "metric-type": {
                    "description": "Metric type to optimize for this path (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "IGP-METRIC",
                    "enum": [
                      "IGP-METRIC",
                      "TE-METRIC",
                      "DELAY",
                      "HOP-COUNT"
                    ]
                  },
                  "metric-value": {
                    "description": "Cumulative metric value for the path (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  }
                }
              },
              "constraints": {
                "description": "(non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "affinity": {
                    "description": "Affinity information (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "exclude-any": {
                        "description": "Exclude-any attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "include-any": {
                        "description": "Include-any attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "include-all": {
                        "description": "Include-all attribute flags (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      }
                    }
                  },
                  "association-info": {
                    "description": "Association (Disjoint Group) information (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "assoc-source": {
                        "description": "Association Source (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "assoc-type": {
                        "description": "Association Type (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "enumeration",
                        "default": "LINK-DISJOINTNESS",
                        "enum": [
                          "LINK-DISJOINTNESS",
                          "NODE-DISJOINTNESS",
                          "SRLG-DISJOINTNESS",
                          "SRLG-NODE-DISJOINTNESS"
                        ]
                      },
                      "assoc-id": {
                        "description": "Association ID (Disjoint Group ID) (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      }
                    }
                  },
                  "bandwidth-mbps": {
                    "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint64"
                  },
                  "unprotected-only-flag": {
                    "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "boolean"
                  }
                }
              },
              "computed-time": {
                "description": "Time stamp when the path was computed (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint64"
              },
              "profile-id": {
                "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "hop": {
                "type": "array",
                "description": "Segment/ Hop list for this path (list)",
                "x-yang": {
                  "type": "list"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "SID type (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "IPV4-NODE-SID",
                      "enum": [
                        "IPV4-NODE-SID",
                        "IPV4-ADJ-SID",
                        "IPV6-NODE-SID",
                        "IPV6-ADJ-SID"
                      ]
                    },
                    "label": {
                      "description": "MPLS label (20 bits) (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "local-ip-addr": {
                      "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "union"
                    },
                    "remote-ip-addr": {
                      "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "union"
                    },
                    "protected-flag": {
                      "description": "If true, the SID is protected (leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_msd": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:msd": {
          "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_delegated-pce": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:delegated-pce": {
          "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details_binding-sid": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:binding-sid": {
          "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_policy-details": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:policy-details": {
          "description": "SR Policy details (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "binding-sid": {
              "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "msd": {
              "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "pce-controlled": {
              "description": "If true, policy can be re-optimized by PCE (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "boolean"
            },
            "delegated-pce": {
              "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "union"
            },
            "sub-delegated-pce": {
              "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "union"
            },
            "pcc-address": {
              "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "union"
            },
            "pcep-info": {
              "description": "PCEP connection details (non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "pcep-id": {
                  "description": "PCE protocol identifier (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                },
                "pcep-flag-d": {
                  "description": "PCEP LSP delegation flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "pcep-flag-s": {
                  "description": "PCEP LSP state-sync flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "pcep-flag-r": {
                  "description": "PCEP LSP remove flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "pcep-flag-a": {
                  "description": "PCEP LSP admin flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "pcep-flag-o": {
                  "description": "PCEP LSP operation flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "byte"
                },
                "pcep-flag-c": {
                  "description": "PCEP LSP initiated flag (leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "byte"
                }
              }
            },
            "path": {
              "type": "array",
              "description": "List of paths associated with the policy (list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "path-name": {
                    "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "path-type": {
                    "description": "Path type (explicit or dynamic) (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "PT-UNKNOWN",
                    "enum": [
                      "PT-UNKNOWN",
                      "PT-EXPLICIT",
                      "PT-DYNAMIC"
                    ]
                  },
                  "preference": {
                    "description": "Configured Preference for this path (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint16"
                  },
                  "optimization-metric": {
                    "description": "(non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "metric-type": {
                        "description": "Metric type to optimize for this path (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "enumeration",
                        "default": "IGP-METRIC",
                        "enum": [
                          "IGP-METRIC",
                          "TE-METRIC",
                          "DELAY",
                          "HOP-COUNT"
                        ]
                      },
                      "metric-value": {
                        "description": "Cumulative metric value for the path (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      }
                    }
                  },
                  "constraints": {
                    "description": "(non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "affinity": {
                        "description": "Affinity information (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "exclude-any": {
                            "description": "Exclude-any attribute flags (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          },
                          "include-any": {
                            "description": "Include-any attribute flags (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          },
                          "include-all": {
                            "description": "Include-all attribute flags (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          }
                        }
                      },
                      "association-info": {
                        "description": "Association (Disjoint Group) information (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "assoc-source": {
                            "description": "Association Source (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "union"
                          },
                          "assoc-type": {
                            "description": "Association Type (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "enumeration",
                            "default": "LINK-DISJOINTNESS",
                            "enum": [
                              "LINK-DISJOINTNESS",
                              "NODE-DISJOINTNESS",
                              "SRLG-DISJOINTNESS",
                              "SRLG-NODE-DISJOINTNESS"
                            ]
                          },
                          "assoc-id": {
                            "description": "Association ID (Disjoint Group ID) (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          }
                        }
                      },
                      "bandwidth-mbps": {
                        "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint64"
                      },
                      "unprotected-only-flag": {
                        "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      }
                    }
                  },
                  "computed-time": {
                    "description": "Time stamp when the path was computed (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint64"
                  },
                  "profile-id": {
                    "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "hop": {
                    "type": "array",
                    "description": "Segment/ Hop list for this path (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "SID type (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "IPV4-NODE-SID",
                          "enum": [
                            "IPV4-NODE-SID",
                            "IPV4-ADJ-SID",
                            "IPV6-NODE-SID",
                            "IPV6-ADJ-SID"
                          ]
                        },
                        "label": {
                          "description": "MPLS label (20 bits) (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint32"
                        },
                        "local-ip-addr": {
                          "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "union"
                        },
                        "remote-ip-addr": {
                          "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "union"
                        },
                        "protected-flag": {
                          "description": "If true, the SID is protected (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_oper-state": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:oper-state": {
          "description": "Operational state of the policy (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "UP",
          "enum": [
            "UP",
            "DOWN"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_headend": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:headend": {
          "description": "Policy head end IP address (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_endpoint": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:endpoint": {
          "description": "Policy end point IP address (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "union"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_description": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:description": {
          "description": "Policy description (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "string"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_color": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:color": {
          "description": "Color associated with the policy (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color_admin-state": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:admin-state": {
          "description": "Administrative state of the policy (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "UP",
          "enum": [
            "UP",
            "DOWN"
          ]
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy_policy-headend_policy-endpoint_policy-color": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:policy": {
          "type": "array",
          "description": "(list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "headend": {
                "description": "Policy head end IP address (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "endpoint": {
                "description": "Policy end point IP address (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "color": {
                "description": "Color associated with the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "description": {
                "description": "Policy description (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "admin-state": {
                "description": "Administrative state of the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "UP",
                "enum": [
                  "UP",
                  "DOWN"
                ]
              },
              "oper-state": {
                "description": "Operational state of the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "UP",
                "enum": [
                  "UP",
                  "DOWN"
                ]
              },
              "sr-policy-type": {
                "description": "The Crosswork SR Policy type for this policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "CW-CONFIGURED",
                "enum": [
                  "CW-CONFIGURED",
                  "CW-CONFIGURED-BW",
                  "CW-TACTICAL-TE",
                  "OTHER"
                ]
              },
              "policy-details": {
                "description": "SR Policy details (non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "binding-sid": {
                    "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "msd": {
                    "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "pce-controlled": {
                    "description": "If true, policy can be re-optimized by PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "boolean"
                  },
                  "delegated-pce": {
                    "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "sub-delegated-pce": {
                    "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "pcc-address": {
                    "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "pcep-info": {
                    "description": "PCEP connection details (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "pcep-id": {
                        "description": "PCE protocol identifier (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "pcep-flag-d": {
                        "description": "PCEP LSP delegation flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-s": {
                        "description": "PCEP LSP state-sync flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-r": {
                        "description": "PCEP LSP remove flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-a": {
                        "description": "PCEP LSP admin flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-o": {
                        "description": "PCEP LSP operation flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "byte"
                      },
                      "pcep-flag-c": {
                        "description": "PCEP LSP initiated flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "byte"
                      }
                    }
                  },
                  "path": {
                    "type": "array",
                    "description": "List of paths associated with the policy (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "path-name": {
                          "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "path-type": {
                          "description": "Path type (explicit or dynamic) (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "PT-UNKNOWN",
                          "enum": [
                            "PT-UNKNOWN",
                            "PT-EXPLICIT",
                            "PT-DYNAMIC"
                          ]
                        },
                        "preference": {
                          "description": "Configured Preference for this path (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint16"
                        },
                        "optimization-metric": {
                          "description": "(non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "metric-type": {
                              "description": "Metric type to optimize for this path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "IGP-METRIC",
                              "enum": [
                                "IGP-METRIC",
                                "TE-METRIC",
                                "DELAY",
                                "HOP-COUNT"
                              ]
                            },
                            "metric-value": {
                              "description": "Cumulative metric value for the path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint32"
                            }
                          }
                        },
                        "constraints": {
                          "description": "(non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "affinity": {
                              "description": "Affinity information (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "exclude-any": {
                                  "description": "Exclude-any attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                },
                                "include-any": {
                                  "description": "Include-any attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                },
                                "include-all": {
                                  "description": "Include-all attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "association-info": {
                              "description": "Association (Disjoint Group) information (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "assoc-source": {
                                  "description": "Association Source (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "union"
                                },
                                "assoc-type": {
                                  "description": "Association Type (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "LINK-DISJOINTNESS",
                                  "enum": [
                                    "LINK-DISJOINTNESS",
                                    "NODE-DISJOINTNESS",
                                    "SRLG-DISJOINTNESS",
                                    "SRLG-NODE-DISJOINTNESS"
                                  ]
                                },
                                "assoc-id": {
                                  "description": "Association ID (Disjoint Group ID) (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "bandwidth-mbps": {
                              "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unprotected-only-flag": {
                              "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "boolean"
                            }
                          }
                        },
                        "computed-time": {
                          "description": "Time stamp when the path was computed (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        },
                        "profile-id": {
                          "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint32"
                        },
                        "hop": {
                          "type": "array",
                          "description": "Segment/ Hop list for this path (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "SID type (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "IPV4-NODE-SID",
                                "enum": [
                                  "IPV4-NODE-SID",
                                  "IPV4-ADJ-SID",
                                  "IPV6-NODE-SID",
                                  "IPV6-ADJ-SID"
                                ]
                              },
                              "label": {
                                "description": "MPLS label (20 bits) (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint32"
                              },
                              "local-ip-addr": {
                                "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "union"
                              },
                              "remote-ip-addr": {
                                "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "union"
                              },
                              "protected-flag": {
                                "description": "If true, the SID is protected (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies_policy": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:policy": {
          "type": "array",
          "description": "(list)",
          "x-yang": {
            "type": "list"
          },
          "items": {
            "type": "object",
            "properties": {
              "headend": {
                "description": "Policy head end IP address (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "endpoint": {
                "description": "Policy end point IP address (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "union"
              },
              "color": {
                "description": "Color associated with the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "integer",
                "format": "uint32"
              },
              "description": {
                "description": "Policy description (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "string"
              },
              "admin-state": {
                "description": "Administrative state of the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "UP",
                "enum": [
                  "UP",
                  "DOWN"
                ]
              },
              "oper-state": {
                "description": "Operational state of the policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "UP",
                "enum": [
                  "UP",
                  "DOWN"
                ]
              },
              "sr-policy-type": {
                "description": "The Crosswork SR Policy type for this policy (leaf)",
                "x-yang": {
                  "type": "leaf"
                },
                "type": "string",
                "format": "enumeration",
                "default": "CW-CONFIGURED",
                "enum": [
                  "CW-CONFIGURED",
                  "CW-CONFIGURED-BW",
                  "CW-TACTICAL-TE",
                  "OTHER"
                ]
              },
              "policy-details": {
                "description": "SR Policy details (non-presence)",
                "type": "object",
                "x-yang": {
                  "type": "container",
                  "is_presence": "false"
                },
                "properties": {
                  "binding-sid": {
                    "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "msd": {
                    "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "pce-controlled": {
                    "description": "If true, policy can be re-optimized by PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "boolean"
                  },
                  "delegated-pce": {
                    "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "sub-delegated-pce": {
                    "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "pcc-address": {
                    "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "pcep-info": {
                    "description": "PCEP connection details (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "pcep-id": {
                        "description": "PCE protocol identifier (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "pcep-flag-d": {
                        "description": "PCEP LSP delegation flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-s": {
                        "description": "PCEP LSP state-sync flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-r": {
                        "description": "PCEP LSP remove flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-a": {
                        "description": "PCEP LSP admin flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "pcep-flag-o": {
                        "description": "PCEP LSP operation flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "byte"
                      },
                      "pcep-flag-c": {
                        "description": "PCEP LSP initiated flag (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "byte"
                      }
                    }
                  },
                  "path": {
                    "type": "array",
                    "description": "List of paths associated with the policy (list)",
                    "x-yang": {
                      "type": "list"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "path-name": {
                          "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "string"
                        },
                        "path-type": {
                          "description": "Path type (explicit or dynamic) (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "string",
                          "format": "enumeration",
                          "default": "PT-UNKNOWN",
                          "enum": [
                            "PT-UNKNOWN",
                            "PT-EXPLICIT",
                            "PT-DYNAMIC"
                          ]
                        },
                        "preference": {
                          "description": "Configured Preference for this path (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint16"
                        },
                        "optimization-metric": {
                          "description": "(non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "metric-type": {
                              "description": "Metric type to optimize for this path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "IGP-METRIC",
                              "enum": [
                                "IGP-METRIC",
                                "TE-METRIC",
                                "DELAY",
                                "HOP-COUNT"
                              ]
                            },
                            "metric-value": {
                              "description": "Cumulative metric value for the path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint32"
                            }
                          }
                        },
                        "constraints": {
                          "description": "(non-presence)",
                          "type": "object",
                          "x-yang": {
                            "type": "container",
                            "is_presence": "false"
                          },
                          "properties": {
                            "affinity": {
                              "description": "Affinity information (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "exclude-any": {
                                  "description": "Exclude-any attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                },
                                "include-any": {
                                  "description": "Include-any attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                },
                                "include-all": {
                                  "description": "Include-all attribute flags (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "association-info": {
                              "description": "Association (Disjoint Group) information (non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "assoc-source": {
                                  "description": "Association Source (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "union"
                                },
                                "assoc-type": {
                                  "description": "Association Type (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "LINK-DISJOINTNESS",
                                  "enum": [
                                    "LINK-DISJOINTNESS",
                                    "NODE-DISJOINTNESS",
                                    "SRLG-DISJOINTNESS",
                                    "SRLG-NODE-DISJOINTNESS"
                                  ]
                                },
                                "assoc-id": {
                                  "description": "Association ID (Disjoint Group ID) (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "bandwidth-mbps": {
                              "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "unprotected-only-flag": {
                              "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "boolean"
                            }
                          }
                        },
                        "computed-time": {
                          "description": "Time stamp when the path was computed (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint64"
                        },
                        "profile-id": {
                          "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                          "x-yang": {
                            "type": "leaf"
                          },
                          "type": "integer",
                          "format": "uint32"
                        },
                        "hop": {
                          "type": "array",
                          "description": "Segment/ Hop list for this path (list)",
                          "x-yang": {
                            "type": "list"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "SID type (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "enumeration",
                                "default": "IPV4-NODE-SID",
                                "enum": [
                                  "IPV4-NODE-SID",
                                  "IPV4-ADJ-SID",
                                  "IPV6-NODE-SID",
                                  "IPV6-ADJ-SID"
                                ]
                              },
                              "label": {
                                "description": "MPLS label (20 bits) (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "integer",
                                "format": "uint32"
                              },
                              "local-ip-addr": {
                                "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "union"
                              },
                              "remote-ip-addr": {
                                "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "union"
                              },
                              "protected-flag": {
                                "description": "If true, the SID is protected (leaf)",
                                "x-yang": {
                                  "type": "leaf"
                                },
                                "type": "string",
                                "format": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_cisco-crosswork-segment-routing-policy_sr-policies": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:sr-policies": {
          "description": "Container of MPLS Segment Routing Policies (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "policy": {
              "type": "array",
              "description": "(list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "headend": {
                    "description": "Policy head end IP address (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "endpoint": {
                    "description": "Policy end point IP address (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "color": {
                    "description": "Color associated with the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "description": {
                    "description": "Policy description (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "admin-state": {
                    "description": "Administrative state of the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "UP",
                    "enum": [
                      "UP",
                      "DOWN"
                    ]
                  },
                  "oper-state": {
                    "description": "Operational state of the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "UP",
                    "enum": [
                      "UP",
                      "DOWN"
                    ]
                  },
                  "sr-policy-type": {
                    "description": "The Crosswork SR Policy type for this policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "CW-CONFIGURED",
                    "enum": [
                      "CW-CONFIGURED",
                      "CW-CONFIGURED-BW",
                      "CW-TACTICAL-TE",
                      "OTHER"
                    ]
                  },
                  "policy-details": {
                    "description": "SR Policy details (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "binding-sid": {
                        "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "msd": {
                        "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "pce-controlled": {
                        "description": "If true, policy can be re-optimized by PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "delegated-pce": {
                        "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "sub-delegated-pce": {
                        "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "pcc-address": {
                        "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "pcep-info": {
                        "description": "PCEP connection details (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "pcep-id": {
                            "description": "PCE protocol identifier (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          },
                          "pcep-flag-d": {
                            "description": "PCEP LSP delegation flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-s": {
                            "description": "PCEP LSP state-sync flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-r": {
                            "description": "PCEP LSP remove flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-a": {
                            "description": "PCEP LSP admin flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-o": {
                            "description": "PCEP LSP operation flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "byte"
                          },
                          "pcep-flag-c": {
                            "description": "PCEP LSP initiated flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "byte"
                          }
                        }
                      },
                      "path": {
                        "type": "array",
                        "description": "List of paths associated with the policy (list)",
                        "x-yang": {
                          "type": "list"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "path-name": {
                              "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "string"
                            },
                            "path-type": {
                              "description": "Path type (explicit or dynamic) (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "PT-UNKNOWN",
                              "enum": [
                                "PT-UNKNOWN",
                                "PT-EXPLICIT",
                                "PT-DYNAMIC"
                              ]
                            },
                            "preference": {
                              "description": "Configured Preference for this path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint16"
                            },
                            "optimization-metric": {
                              "description": "(non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "metric-type": {
                                  "description": "Metric type to optimize for this path (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "IGP-METRIC",
                                  "enum": [
                                    "IGP-METRIC",
                                    "TE-METRIC",
                                    "DELAY",
                                    "HOP-COUNT"
                                  ]
                                },
                                "metric-value": {
                                  "description": "Cumulative metric value for the path (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "constraints": {
                              "description": "(non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "affinity": {
                                  "description": "Affinity information (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "exclude-any": {
                                      "description": "Exclude-any attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "include-any": {
                                      "description": "Include-any attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "include-all": {
                                      "description": "Include-all attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    }
                                  }
                                },
                                "association-info": {
                                  "description": "Association (Disjoint Group) information (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "assoc-source": {
                                      "description": "Association Source (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "union"
                                    },
                                    "assoc-type": {
                                      "description": "Association Type (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "LINK-DISJOINTNESS",
                                      "enum": [
                                        "LINK-DISJOINTNESS",
                                        "NODE-DISJOINTNESS",
                                        "SRLG-DISJOINTNESS",
                                        "SRLG-NODE-DISJOINTNESS"
                                      ]
                                    },
                                    "assoc-id": {
                                      "description": "Association ID (Disjoint Group ID) (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    }
                                  }
                                },
                                "bandwidth-mbps": {
                                  "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unprotected-only-flag": {
                                  "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "boolean"
                                }
                              }
                            },
                            "computed-time": {
                              "description": "Time stamp when the path was computed (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "profile-id": {
                              "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint32"
                            },
                            "hop": {
                              "type": "array",
                              "description": "Segment/ Hop list for this path (list)",
                              "x-yang": {
                                "type": "list"
                              },
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "SID type (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "IPV4-NODE-SID",
                                    "enum": [
                                      "IPV4-NODE-SID",
                                      "IPV4-ADJ-SID",
                                      "IPV6-NODE-SID",
                                      "IPV6-ADJ-SID"
                                    ]
                                  },
                                  "label": {
                                    "description": "MPLS label (20 bits) (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "local-ip-addr": {
                                    "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "union"
                                  },
                                  "remote-ip-addr": {
                                    "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "union"
                                  },
                                  "protected-flag": {
                                    "description": "If true, the SID is protected (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data-post": {
      "type": "object",
      "properties": {
        "cisco-crosswork-segment-routing-policy:sr-policies": {
          "description": "Container of MPLS Segment Routing Policies (non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "policy": {
              "type": "array",
              "description": "(list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "headend": {
                    "description": "Policy head end IP address (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "endpoint": {
                    "description": "Policy end point IP address (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "union"
                  },
                  "color": {
                    "description": "Color associated with the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "integer",
                    "format": "uint32"
                  },
                  "description": {
                    "description": "Policy description (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  },
                  "admin-state": {
                    "description": "Administrative state of the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "UP",
                    "enum": [
                      "UP",
                      "DOWN"
                    ]
                  },
                  "oper-state": {
                    "description": "Operational state of the policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "UP",
                    "enum": [
                      "UP",
                      "DOWN"
                    ]
                  },
                  "sr-policy-type": {
                    "description": "The Crosswork SR Policy type for this policy (leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "CW-CONFIGURED",
                    "enum": [
                      "CW-CONFIGURED",
                      "CW-CONFIGURED-BW",
                      "CW-TACTICAL-TE",
                      "OTHER"
                    ]
                  },
                  "policy-details": {
                    "description": "SR Policy details (non-presence)",
                    "type": "object",
                    "x-yang": {
                      "type": "container",
                      "is_presence": "false"
                    },
                    "properties": {
                      "binding-sid": {
                        "description": "Binding SID assigned to the policy\n*** Or is BSID associated with a path? (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "msd": {
                        "description": "Maximum SID Depth\n*** Should this be associated with a path or is it more of a\nheadend property? (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "integer",
                        "format": "uint32"
                      },
                      "pce-controlled": {
                        "description": "If true, policy can be re-optimized by PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "boolean"
                      },
                      "delegated-pce": {
                        "description": "IPv4 or IPv6 address of the delegated PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "sub-delegated-pce": {
                        "description": "IPv4 or IPv6 address of the sub-delegated PCE (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "pcc-address": {
                        "description": "IPv4 or IPv6 address of PCC (Path Compute Client) (leaf)",
                        "x-yang": {
                          "type": "leaf"
                        },
                        "type": "string",
                        "format": "union"
                      },
                      "pcep-info": {
                        "description": "PCEP connection details (non-presence)",
                        "type": "object",
                        "x-yang": {
                          "type": "container",
                          "is_presence": "false"
                        },
                        "properties": {
                          "pcep-id": {
                            "description": "PCE protocol identifier (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "uint32"
                          },
                          "pcep-flag-d": {
                            "description": "PCEP LSP delegation flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-s": {
                            "description": "PCEP LSP state-sync flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-r": {
                            "description": "PCEP LSP remove flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-a": {
                            "description": "PCEP LSP admin flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "string",
                            "format": "boolean"
                          },
                          "pcep-flag-o": {
                            "description": "PCEP LSP operation flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "byte"
                          },
                          "pcep-flag-c": {
                            "description": "PCEP LSP initiated flag (leaf)",
                            "x-yang": {
                              "type": "leaf"
                            },
                            "type": "integer",
                            "format": "byte"
                          }
                        }
                      },
                      "path": {
                        "type": "array",
                        "description": "List of paths associated with the policy (list)",
                        "x-yang": {
                          "type": "list"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "path-name": {
                              "description": "Path Name\n*** Is there also an ID (equivalent of LSP ID) to identify a path? (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "string"
                            },
                            "path-type": {
                              "description": "Path type (explicit or dynamic) (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "string",
                              "format": "enumeration",
                              "default": "PT-UNKNOWN",
                              "enum": [
                                "PT-UNKNOWN",
                                "PT-EXPLICIT",
                                "PT-DYNAMIC"
                              ]
                            },
                            "preference": {
                              "description": "Configured Preference for this path (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint16"
                            },
                            "optimization-metric": {
                              "description": "(non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "metric-type": {
                                  "description": "Metric type to optimize for this path (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "enumeration",
                                  "default": "IGP-METRIC",
                                  "enum": [
                                    "IGP-METRIC",
                                    "TE-METRIC",
                                    "DELAY",
                                    "HOP-COUNT"
                                  ]
                                },
                                "metric-value": {
                                  "description": "Cumulative metric value for the path (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint32"
                                }
                              }
                            },
                            "constraints": {
                              "description": "(non-presence)",
                              "type": "object",
                              "x-yang": {
                                "type": "container",
                                "is_presence": "false"
                              },
                              "properties": {
                                "affinity": {
                                  "description": "Affinity information (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "exclude-any": {
                                      "description": "Exclude-any attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "include-any": {
                                      "description": "Include-any attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    },
                                    "include-all": {
                                      "description": "Include-all attribute flags (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    }
                                  }
                                },
                                "association-info": {
                                  "description": "Association (Disjoint Group) information (non-presence)",
                                  "type": "object",
                                  "x-yang": {
                                    "type": "container",
                                    "is_presence": "false"
                                  },
                                  "properties": {
                                    "assoc-source": {
                                      "description": "Association Source (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "union"
                                    },
                                    "assoc-type": {
                                      "description": "Association Type (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "string",
                                      "format": "enumeration",
                                      "default": "LINK-DISJOINTNESS",
                                      "enum": [
                                        "LINK-DISJOINTNESS",
                                        "NODE-DISJOINTNESS",
                                        "SRLG-DISJOINTNESS",
                                        "SRLG-NODE-DISJOINTNESS"
                                      ]
                                    },
                                    "assoc-id": {
                                      "description": "Association ID (Disjoint Group ID) (leaf)",
                                      "x-yang": {
                                        "type": "leaf"
                                      },
                                      "type": "integer",
                                      "format": "uint32"
                                    }
                                  }
                                },
                                "bandwidth-mbps": {
                                  "description": "Requested bandwidth in mega-bits-per-sec (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "integer",
                                  "format": "uint64"
                                },
                                "unprotected-only-flag": {
                                  "description": "If true, path must include unprotected SIDs only, else\nprotected SIDs should be preferred (leaf)",
                                  "x-yang": {
                                    "type": "leaf"
                                  },
                                  "type": "string",
                                  "format": "boolean"
                                }
                              }
                            },
                            "computed-time": {
                              "description": "Time stamp when the path was computed (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint64"
                            },
                            "profile-id": {
                              "description": "Associates this path with a forwarding profile on the router/ device (leaf)",
                              "x-yang": {
                                "type": "leaf"
                              },
                              "type": "integer",
                              "format": "uint32"
                            },
                            "hop": {
                              "type": "array",
                              "description": "Segment/ Hop list for this path (list)",
                              "x-yang": {
                                "type": "list"
                              },
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "SID type (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "enumeration",
                                    "default": "IPV4-NODE-SID",
                                    "enum": [
                                      "IPV4-NODE-SID",
                                      "IPV4-ADJ-SID",
                                      "IPV6-NODE-SID",
                                      "IPV6-ADJ-SID"
                                    ]
                                  },
                                  "label": {
                                    "description": "MPLS label (20 bits) (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "integer",
                                    "format": "uint32"
                                  },
                                  "local-ip-addr": {
                                    "description": "Local IPv4 or IPv6 address. If type is a Node SID, this will be\nthe node's IP address, usually associated with a loopback interface (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "union"
                                  },
                                  "remote-ip-addr": {
                                    "description": "The remote IPv4 or IPv6 address if type is an adjacency SID, else n/a (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "union"
                                  },
                                  "protected-flag": {
                                    "description": "If true, the SID is protected (leaf)",
                                    "x-yang": {
                                      "type": "leaf"
                                    },
                                    "type": "string",
                                    "format": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data": {
      "type": "object",
      "properties": {
        "ietf-restconf:data": {
          "type": "object",
          "description": "This resource represents the combined configuration and state data resources that can be accessed by a client and cannot be created or deleted by the client. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "datastore"
          },
          "properties": {
          }
        }
      }
    }
  }
}

{
  "swagger": "2.0",
  "info": {
    "title": "optima-restconf-pce-dispatch",
    "description": "",
    "version": "2019-05-30"
  },
  "basePath": "/crosswork/nbi/optima/v1/restconf",
  "tags": [
    {
      "name": "root",
      "description": "root resources"
    },
    {
      "name": "operations",
      "description": "operations resources"
    },
    {
      "name": "data",
      "description": "data resources"
    },
    {
      "name": "get",
      "description": "get resources"
    },
    {
      "name": "post",
      "description": "post resources"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "produces": [
    "application/yang-data+json"
  ],
  "consumes": [
    "application/yang-data+json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "root",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "root_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/root"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations": {
      "get": {
        "tags": [
          "operations",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "operations_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/operations"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin": {
      "post": {
        "tags": [
          "operations",
          "post"
        ],
        "summary": "",
        "description": "",
        "operationId": "operations_optima_restconf_pce_dispatch_ui_provisioning_standin_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/output": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/action": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/name": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/headend": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/path-name": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/destination": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/color": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/profile-id": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/hop-type": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/sid": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/ip": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives/min-metric": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives/bandwidth": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/min-metric": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/protected": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/group_id": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/sub_group": {
    },
    "/operations/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/type": {
    },
    "/yang-library-version": {
      "get": {
        "tags": [
          "yang-library-version",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "yang_library_version_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/yang-library-version"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data": {
      "get": {
        "tags": [
          "data",
          "get"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_get",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data-post"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin": {
      "post": {
        "tags": [
          "data",
          "post"
        ],
        "summary": "",
        "description": "",
        "operationId": "data_optima_restconf_pce_dispatch_ui_provisioning_standin_post",
        "produces": [
          "application/yang-data+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-output"
            }
          },
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "409": {
            "$ref": "#/responses/409"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/output": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/action": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/name": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/headend": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/path-name": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/destination": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/color": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/profile-id": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/hop-type": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/sid": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/segment-list-hops=/ip": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives/min-metric": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/bw-on-demand-objectives/bandwidth": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/min-metric": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/protected": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/group_id": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/sub_group": {
    },
    "/data/optima-restconf-pce-dispatch:ui-provisioning-standin/input/policy/dynamic-path-objectives/disjointness/type": {
    },
    "/data/optima-restconf-pce-dispatch:engine-model-update": {
    },
    "/data/optima-restconf-pce-dispatch:engine-model-update/update-type": {
    },
    "/data/optima-restconf-pce-dispatch:engine-model-update/update-time": {
    }
  },
  "parameters": {
    "content": {
      "name": "content",
      "in": "query",
      "description": "controlling descendant nodes in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "config",
      "enum": [
        "config",
        "nonconfig",
        "all"
      ]
    },
    "depth": {
      "name": "depth",
      "in": "query",
      "description": "limit the depth of nodes in response",
      "required": false,
      "type": "integer",
      "format": "uint16"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "optionally identify specific data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "filter": {
      "name": "filter",
      "in": "query",
      "description": "xpath expression to filter data nodes in response",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "with-defaults": {
      "name": "with-defaults",
      "in": "query",
      "description": "controlling default values in response",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "report-all",
      "enum": [
        "report-all",
        "trim",
        "explicit",
        "report-all-tagged"
      ]
    },
    "insert": {
      "name": "insert",
      "in": "query",
      "description": "controlling the order when adding new list elements",
      "required": false,
      "type": "string",
      "format": "enumeration",
      "default": "first",
      "enum": [
        "first",
        "last",
        "before",
        "after"
      ]
    },
    "point": {
      "name": "point",
      "in": "query",
      "description": "used to specify the insertion point",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input": {
      "name": "ui-provisioning-standin",
      "in": "body",
      "description": "",
      "required": true,
      "schema": {
        "$ref": "#/definitions/operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input"
      }
    },
    "data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input": {
      "name": "ui-provisioning-standin",
      "in": "body",
      "description": "",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input"
      }
    },
    "data-post": {
      "name": "data",
      "in": "body",
      "description": "",
      "required": true,
      "schema": {
        "$ref": "#/definitions/data-post"
      }
    }
  },
  "responses": {
    "200": {
      "description": "OK"
    },
    "201": {
      "description": "Created"
    },
    "204": {
      "description": "No Content"
    },
    "400": {
      "description": "Bad Request"
    },
    "401": {
      "description": "Unauthorized"
    },
    "404": {
      "description": "Not Found"
    },
    "405": {
      "description": "Method Not Allowed"
    },
    "409": {
      "description": "Conflict"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "yang-library-version": {
      "type": "object",
      "properties": {
        "ietf-restconf:yang-library-version": {
          "type": "object",
          "description": "This leaf identifies the revision date of the 'ietf-yang-library' YANG module that is implemented by this server. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "leaf"
          },
          "properties": {
          }
        }
      }
    },
    "root": {
      "type": "object",
      "properties": {
        "ietf-restconf:restconf": {
          "type": "object",
          "x-yang": {
            "type": "root"
          },
          "description": "This is the RESTCONF root resource for the RESTCONF datastore and operation resources. See RESTCONF RFC 8040 for further information.",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
              }
            },
            "operations": {
              "type": "object",
              "properties": {
              }
            },
            "yang-library-version": {
              "type": "string"
            }
          }
        }
      }
    },
    "operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-output": {
      "type": "object",
      "properties": {
      }
    },
    "operations_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input": {
      "type": "object",
      "properties": {
        "optima-restconf-pce-dispatch:action": {
          "description": "SR Policy deployment request type (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "create",
          "enum": [
            "create",
            "update",
            "delete"
          ]
        },
        "optima-restconf-pce-dispatch:policy": {
          "description": "(non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "headend": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "path-name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "destination": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "color": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "int32"
            },
            "profile-id": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "segment-list-hops": {
              "type": "array",
              "description": "(list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "hop-type": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "node",
                    "enum": [
                      "node",
                      "adj-sid"
                    ]
                  },
                  "sid": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "int32"
                  },
                  "ip": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "bw-on-demand-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "bandwidth": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                }
              }
            },
            "dynamic-path-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "protected": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "disjointness": {
                  "description": "(non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "group_id": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "sub_group": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "type": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "node",
                      "enum": [
                        "node",
                        "link",
                        "srlg",
                        "srlgnode"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "type": "object",
      "properties": {
        "ietf-restconf:operations": {
          "type": "object",
          "x-yang": {
            "type": "operations"
          },
          "description": "This resource is a container that provides access to the data-model-specific RPC operations supported by the server. See RESTCONF RFC 8040 for further information.",
          "properties": {

            "optima-restconf-pce-dispatch:ui-provisioning-standin": {
              "type": "string",
              "format": "[null]"
            }
          }
        }
      }
    },
    "data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-output": {
      "type": "object",
      "properties": {
      }
    },
    "data_optima-restconf-pce-dispatch_ui-provisioning-standin-post-input": {
      "type": "object",
      "properties": {
        "optima-restconf-pce-dispatch:action": {
          "description": "SR Policy deployment request type (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "create",
          "enum": [
            "create",
            "update",
            "delete"
          ]
        },
        "optima-restconf-pce-dispatch:policy": {
          "description": "(non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "headend": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "path-name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "destination": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "color": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "int32"
            },
            "profile-id": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "segment-list-hops": {
              "type": "array",
              "description": "(list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "hop-type": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "node",
                    "enum": [
                      "node",
                      "adj-sid"
                    ]
                  },
                  "sid": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "int32"
                  },
                  "ip": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "bw-on-demand-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "bandwidth": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                }
              }
            },
            "dynamic-path-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "protected": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "disjointness": {
                  "description": "(non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "group_id": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "sub_group": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "type": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "node",
                      "enum": [
                        "node",
                        "link",
                        "srlg",
                        "srlgnode"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data-post": {
      "type": "object",
      "properties": {
        "optima-restconf-pce-dispatch:action": {
          "description": "SR Policy deployment request type (leaf)",
          "x-yang": {
            "type": "leaf"
          },
          "type": "string",
          "format": "enumeration",
          "default": "create",
          "enum": [
            "create",
            "update",
            "delete"
          ]
        },
        "optima-restconf-pce-dispatch:policy": {
          "description": "(non-presence)",
          "type": "object",
          "x-yang": {
            "type": "container",
            "is_presence": "false"
          },
          "properties": {
            "name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "headend": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "path-name": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "destination": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "string"
            },
            "color": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "string",
              "format": "int32"
            },
            "profile-id": {
              "description": "(leaf)",
              "x-yang": {
                "type": "leaf"
              },
              "type": "integer",
              "format": "uint32"
            },
            "segment-list-hops": {
              "type": "array",
              "description": "(list)",
              "x-yang": {
                "type": "list"
              },
              "items": {
                "type": "object",
                "properties": {
                  "hop-type": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "enumeration",
                    "default": "node",
                    "enum": [
                      "node",
                      "adj-sid"
                    ]
                  },
                  "sid": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "int32"
                  },
                  "ip": {
                    "description": "(leaf)",
                    "x-yang": {
                      "type": "leaf"
                    },
                    "type": "string",
                    "format": "string"
                  }
                }
              }
            },
            "bw-on-demand-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "bandwidth": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "integer",
                  "format": "uint32"
                }
              }
            },
            "dynamic-path-objectives": {
              "description": "(non-presence)",
              "type": "object",
              "x-yang": {
                "type": "container",
                "is_presence": "false"
              },
              "properties": {
                "min-metric": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "enumeration",
                  "default": "IGP",
                  "enum": [
                    "IGP",
                    "TE",
                    "DELAY"
                  ]
                },
                "protected": {
                  "description": "(leaf)",
                  "x-yang": {
                    "type": "leaf"
                  },
                  "type": "string",
                  "format": "boolean"
                },
                "disjointness": {
                  "description": "(non-presence)",
                  "type": "object",
                  "x-yang": {
                    "type": "container",
                    "is_presence": "false"
                  },
                  "properties": {
                    "group_id": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "sub_group": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "integer",
                      "format": "uint32"
                    },
                    "type": {
                      "description": "(leaf)",
                      "x-yang": {
                        "type": "leaf"
                      },
                      "type": "string",
                      "format": "enumeration",
                      "default": "node",
                      "enum": [
                        "node",
                        "link",
                        "srlg",
                        "srlgnode"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data": {
      "type": "object",
      "properties": {
        "ietf-restconf:data": {
          "type": "object",
          "description": "This resource represents the combined configuration and state data resources that can be accessed by a client and cannot be created or deleted by the client. See RESTCONF RFC 8040 for further information.",
          "x-yang": {
            "type": "datastore"
          },
          "properties": {
          }
        }
      }
    }
  }
}
